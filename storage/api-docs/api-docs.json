{
    "openapi": "3.0.0",
    "info": {
        "title": "Academia World API",
        "description": "API for Academia World - Academic Event Management Platform",
        "contact": {
            "name": "Academia World Support",
            "email": "support@academiaworld.com"
        },
        "license": {
            "name": "MIT License",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "Local Development Server"
        }
    ],
    "paths": {
        "/api/v1/admin/analytics/overview": {
            "get": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Get platform overview statistics",
                "description": "Retrieve comprehensive platform statistics for the specified time period",
                "operationId": "getPlatformOverview",
                "parameters": [
                    {
                        "name": "days",
                        "in": "query",
                        "description": "Number of days to include in statistics",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 365,
                            "minimum": 1,
                            "example": 30
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Platform overview retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Platform overview retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "total_users": {
                                                    "type": "integer"
                                                },
                                                "total_events": {
                                                    "type": "integer"
                                                },
                                                "total_registrations": {
                                                    "type": "integer"
                                                },
                                                "active_users": {
                                                    "type": "integer"
                                                },
                                                "growth_metrics": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied - Admin privileges required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Access denied"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/admin/analytics/user-engagement": {
            "get": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Get user engagement analytics",
                "description": "Retrieve user engagement metrics for the specified date range",
                "operationId": "getUserEngagementAnalytics",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start date for analytics (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "End date for analytics (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User engagement analytics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User engagement analytics retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "metrics": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "summary": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/admin/analytics/event-engagement": {
            "get": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Get event engagement analytics",
                "description": "Retrieve event engagement metrics for the specified date range",
                "operationId": "getEventEngagementAnalytics",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start date for analytics (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "End date for analytics (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event engagement analytics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Event engagement analytics retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "metrics": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "summary": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/admin/analytics/forum-activity": {
            "get": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Get forum activity analytics",
                "description": "Retrieve forum activity metrics for the specified date range",
                "operationId": "getForumActivityAnalytics",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start date for analytics (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "End date for analytics (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Forum activity analytics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Forum activity analytics retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "metrics": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "summary": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Create a new user account with academic information",
                "operationId": "registerUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "institution"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@university.edu"
                                    },
                                    "password": {
                                        "type": "string",
                                        "minLength": 8,
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "institution": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "University of Technology"
                                    },
                                    "department": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Computer Science"
                                    },
                                    "position": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Professor"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Registration successful. Please check your email for verification."
                                        },
                                        "user": {
                                            "properties": {
                                                "uuid": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "550e8400-e29b-41d4-a716-446655440000"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "john.doe@university.edu"
                                                },
                                                "institution": {
                                                    "type": "string",
                                                    "example": "University of Technology"
                                                },
                                                "account_status": {
                                                    "type": "string",
                                                    "example": "pending"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation errors"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Registration failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Registration failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Something went wrong. Please try again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "description": "Authenticate user and return access token",
                "operationId": "0e326ce09f6496b8aa071164115ce2e0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@university.edu"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "example": "1|TOKEN_HERE"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/user": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get current user",
                "description": "Get current authenticated user information",
                "operationId": "d0e394c8b0ce07e35936025b95de8ce2",
                "responses": {
                    "200": {
                        "description": "User information retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "uuid": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "550e8400-e29b-41d4-a716-446655440000"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "john.doe@university.edu"
                                                },
                                                "institution": {
                                                    "type": "string",
                                                    "example": "University of Technology"
                                                },
                                                "department": {
                                                    "type": "string",
                                                    "example": "Computer Science"
                                                },
                                                "position": {
                                                    "type": "string",
                                                    "example": "Professor"
                                                },
                                                "account_status": {
                                                    "type": "string",
                                                    "example": "active"
                                                },
                                                "is_admin": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "hosted_events_count": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "registered_events_count": {
                                                    "type": "integer",
                                                    "example": 12
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "description": "Logout user and invalidate all access tokens",
                "operationId": "9bcd56c32550e9746a1e3549fe19bcab",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/auth/forgot-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send password reset link",
                "description": "Send password reset link to user email",
                "operationId": "b5e714b501087d87ed7ce9d58b2452a2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@university.edu"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset link sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset link sent to your email"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation errors"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unable to send reset link",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unable to send reset link"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/reset-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset user password",
                "description": "Reset user password using reset token",
                "operationId": "ec8ddaee958d34f4b8134a98c760c566",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "example": "reset_token_here"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@university.edu"
                                    },
                                    "password": {
                                        "type": "string",
                                        "minLength": 8,
                                        "example": "newpassword123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation errors"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Password reset failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/verify-email": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify user email address",
                "description": "Verify user email address using verification token",
                "operationId": "28f3343632266b214822f6a2f3f9e826",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token"
                                ],
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "example": "abc123def456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email verified successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or expired token"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                }
            }
        },
        "/api/v1/auth/resend-verification": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Resend email verification",
                "description": "Resend email verification to user",
                "operationId": "487743aff5bd900be51c4603b39d785a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@university.edu"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Verification email sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Verification email sent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Email already verified or user not found"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                }
            }
        },
        "/api/v1/events": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Browse published events",
                "description": "Get a paginated list of published public events with filtering options",
                "operationId": "c67c1b8dd42c2ffd15bab2ab0c59b8e9",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search in title, description, and tags",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "location_type",
                        "in": "query",
                        "description": "Filter by location type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "physical",
                                "virtual",
                                "hybrid"
                            ]
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Filter events starting from this date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "Filter events ending before this date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Events retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Event"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Create a new event",
                "description": "Create a new event (automatically published for moderation)",
                "operationId": "d81feee2b86ef0415708990dad9b58ec",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "description",
                                    "start_date",
                                    "end_date",
                                    "location_type"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "AI in Academic Research"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Workshop on implementing AI tools in academic research"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-08-15 14:00:00"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-08-15 17:00:00"
                                    },
                                    "timezone": {
                                        "type": "string",
                                        "maxLength": 50,
                                        "example": "UTC"
                                    },
                                    "location_type": {
                                        "type": "string",
                                        "enum": [
                                            "physical",
                                            "virtual",
                                            "hybrid"
                                        ],
                                        "example": "hybrid"
                                    },
                                    "location": {
                                        "type": "string",
                                        "maxLength": 500,
                                        "example": "University Main Hall"
                                    },
                                    "virtual_link": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://zoom.us/j/123456789"
                                    },
                                    "capacity": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "example": 50
                                    },
                                    "visibility": {
                                        "type": "string",
                                        "enum": [
                                            "public",
                                            "private"
                                        ],
                                        "example": "public"
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "AI",
                                            "Research",
                                            "Workshop"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Event created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Event created and published successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Event"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/events/{event}": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get event details",
                "description": "Retrieve detailed information about a specific event",
                "operationId": "07cf363d0231200f3fee083a1c696d05",
                "parameters": [
                    {
                        "name": "event",
                        "in": "path",
                        "description": "Event UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Event"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event not found or not accessible",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Events"
                ],
                "summary": "Update an event",
                "description": "Update event details (only by event owner)",
                "operationId": "e6433ea52ee4cced6791f22e370910e3",
                "parameters": [
                    {
                        "name": "event",
                        "in": "path",
                        "description": "Event UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "location_type": {
                                        "type": "string",
                                        "enum": [
                                            "physical",
                                            "virtual",
                                            "hybrid"
                                        ]
                                    },
                                    "location": {
                                        "type": "string",
                                        "maxLength": 500
                                    },
                                    "virtual_link": {
                                        "type": "string",
                                        "format": "url"
                                    },
                                    "capacity": {
                                        "type": "integer",
                                        "minimum": 1
                                    },
                                    "visibility": {
                                        "type": "string",
                                        "enum": [
                                            "public",
                                            "private"
                                        ]
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Event updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Event"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized to edit this event",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Events"
                ],
                "summary": "Delete an event",
                "description": "Delete event (only by event owner)",
                "operationId": "99fa0c7b87c9aad9f41cb1f60ef1d6ea",
                "parameters": [
                    {
                        "name": "event",
                        "in": "path",
                        "description": "Event UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Event deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized to delete this event",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/events/{event}/register": {
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Register for an event",
                "description": "Register the authenticated user for a specific event",
                "operationId": "569ebc395f7675d3bb60e6c712990fb3",
                "parameters": [
                    {
                        "name": "event",
                        "in": "path",
                        "description": "Event UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "notes": {
                                        "type": "string",
                                        "example": "Looking forward to this workshop!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Registration successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully registered for event"
                                        },
                                        "data": {
                                            "properties": {
                                                "event_uuid": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "550e8400-e29b-41d4-a716-446655440000"
                                                },
                                                "user_uuid": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "660f9400-e29b-41d4-a716-446655440001"
                                                },
                                                "notes": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "registered_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Registration failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/events/{id}/unregister": {
            "delete": {
                "tags": [
                    "Events"
                ],
                "summary": "Unregister from an event",
                "description": "Remove user registration from a specific event",
                "operationId": "ca3ac7de7800c1fadda9b0aa08997c24",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Unregistration successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully unregistered from event"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Not registered for this event",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/my-events": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get user's hosted events",
                "description": "Retrieve all events hosted by the authenticated user",
                "operationId": "71bccf7ba4eefef30f053a39ecd809b9",
                "responses": {
                    "200": {
                        "description": "User events retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Event"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/my-registrations": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get user's event registrations",
                "description": "Retrieve all events the authenticated user has registered for",
                "operationId": "724843daf57b096461f15e6f0603daa7",
                "responses": {
                    "200": {
                        "description": "User registrations retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EventRegistration"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/events/{id}/attendees": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get event attendees",
                "description": "Retrieve list of event attendees (only for event host)",
                "operationId": "5cf7ea26ccbf1edaa83203c00f010420",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attendees retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        },
                                        "total_count": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized to view attendees",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/admin/events/{id}/ban": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Ban an event (Admin only)",
                "description": "Ban an event with reason (admin access required)",
                "operationId": "b5a8dcbdcb542f3f0155790deab295cd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "reason"
                                ],
                                "properties": {
                                    "reason": {
                                        "type": "string",
                                        "example": "Inappropriate content detected"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Event banned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Event banned successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Event"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Admin access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/admin/events/{id}/unban": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Unban an event (Admin only)",
                "description": "Restore a banned event to published status (admin access required)",
                "operationId": "0755bec870fd4531c80dd39759db3d18",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event unbanned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Event unbanned successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Event"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Admin access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/admin/events/{id}/force-delete": {
            "delete": {
                "tags": [
                    "Admin"
                ],
                "summary": "Force delete an event (Admin only)",
                "description": "Permanently delete an event and all associated data (admin access required)",
                "operationId": "00fb0161a4fd279b47185bd3c75a0f77",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Event permanently deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Admin access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/events/search": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Advanced event search",
                "description": "Search events with advanced filtering options",
                "operationId": "e0d23a5fa046eabe14c3eb12ae39863c",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search query for title, description, and tags",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter by event category",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Conference",
                                "Workshop",
                                "Seminar",
                                "Research",
                                "Networking"
                            ]
                        }
                    },
                    {
                        "name": "location_type",
                        "in": "query",
                        "description": "Filter by location type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "physical",
                                "virtual",
                                "hybrid"
                            ]
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Filter events starting from this date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "Filter events ending before this date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "Filter by specific tags (comma-separated)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "capacity_min",
                        "in": "query",
                        "description": "Minimum event capacity",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "capacity_max",
                        "in": "query",
                        "description": "Maximum event capacity",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "availability",
                        "in": "query",
                        "description": "Filter by availability",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "available",
                                "full",
                                "any"
                            ]
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort results by field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "date",
                                "popularity",
                                "capacity",
                                "created_at"
                            ]
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of results per page (max 50)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 50,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Event"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        },
                                        "facets": {
                                            "properties": {
                                                "total_count": {
                                                    "type": "integer"
                                                },
                                                "location_types": {
                                                    "type": "object"
                                                },
                                                "popular_tags": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/events/{event}/forums": {
            "get": {
                "tags": [
                    "Forums"
                ],
                "summary": "Get event forums",
                "description": "Retrieve all active discussion forums for a specific event",
                "operationId": "98e8b262a404f0c4c7c4931d9cc64f59",
                "parameters": [
                    {
                        "name": "event",
                        "in": "path",
                        "description": "Event UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Forums retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Forums retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "uuid": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "general",
                                                            "q_and_a",
                                                            "networking",
                                                            "feedback",
                                                            "technical"
                                                        ]
                                                    },
                                                    "post_count": {
                                                        "type": "integer"
                                                    },
                                                    "participant_count": {
                                                        "type": "integer"
                                                    },
                                                    "last_activity_at": {
                                                        "type": "string",
                                                        "format": "datetime"
                                                    },
                                                    "creator": {
                                                        "properties": {
                                                            "uuid": {
                                                                "type": "string",
                                                                "format": "uuid"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "latest_post": {
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Forums"
                ],
                "summary": "Create a new forum",
                "description": "Create a new discussion forum for an event",
                "operationId": "51deae8232f07c26580eece3e918edea",
                "parameters": [
                    {
                        "name": "event",
                        "in": "path",
                        "description": "Event UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "type"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "general",
                                            "q_and_a",
                                            "networking",
                                            "feedback",
                                            "technical"
                                        ]
                                    },
                                    "is_moderated": {
                                        "type": "boolean",
                                        "default": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Forum created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Only event hosts can create forums"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/forums/{forum}": {
            "get": {
                "tags": [
                    "Forums"
                ],
                "summary": "Get a specific forum",
                "description": "Retrieves a specific forum by UUID with creator and event details",
                "operationId": "getForumByUuid",
                "parameters": [
                    {
                        "name": "forum",
                        "in": "path",
                        "description": "Forum UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Forum retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Forum retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "uuid": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "title": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "general",
                                                        "qa",
                                                        "academic",
                                                        "feedback"
                                                    ]
                                                },
                                                "is_active": {
                                                    "type": "boolean"
                                                },
                                                "creator": {
                                                    "properties": {
                                                        "uuid": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "event": {
                                                    "properties": {
                                                        "uuid": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                        },
                                                        "title": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Forum not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Forum not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Forums"
                ],
                "summary": "Delete a forum",
                "description": "Deletes a forum and all its posts. Only event hosts and admins can delete forums.",
                "operationId": "deleteForum",
                "parameters": [
                    {
                        "name": "forum",
                        "in": "path",
                        "description": "Forum UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Forum deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Forum deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized to delete forum",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to delete this forum"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Forum not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Forum not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Forums"
                ],
                "summary": "Update a forum",
                "description": "Updates a forum. Only event hosts and admins can update forums.",
                "operationId": "updateForum",
                "parameters": [
                    {
                        "name": "forum",
                        "in": "path",
                        "description": "Forum UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Updated Academic Discussion"
                                    },
                                    "description": {
                                        "type": "string",
                                        "maxLength": 1000,
                                        "example": "Updated discussion forum for event"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "is_moderated": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Forum updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Forum updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "uuid": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "title": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "type": "string"
                                                },
                                                "is_active": {
                                                    "type": "boolean"
                                                },
                                                "is_moderated": {
                                                    "type": "boolean"
                                                },
                                                "post_count": {
                                                    "type": "integer"
                                                },
                                                "participant_count": {
                                                    "type": "integer"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized to update forum",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to update this forum"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Forum not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Forum not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/forums/{forum}/posts": {
            "get": {
                "tags": [
                    "Forum Posts"
                ],
                "summary": "Get all posts in a forum",
                "description": "Retrieves all top-level posts in a forum with replies and pagination",
                "operationId": "getForumPosts",
                "parameters": [
                    {
                        "name": "forum",
                        "in": "path",
                        "description": "Forum UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Posts retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Posts retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "uuid": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "content": {
                                                        "type": "string"
                                                    },
                                                    "is_pinned": {
                                                        "type": "boolean"
                                                    },
                                                    "is_solution": {
                                                        "type": "boolean"
                                                    },
                                                    "likes_count": {
                                                        "type": "integer"
                                                    },
                                                    "replies_count": {
                                                        "type": "integer"
                                                    },
                                                    "user": {
                                                        "properties": {
                                                            "uuid": {
                                                                "type": "string",
                                                                "format": "uuid"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Forum not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Forum not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Forum Posts"
                ],
                "summary": "Create a new post in a forum",
                "description": "Creates a new post or reply in a forum",
                "operationId": "createForumPost",
                "parameters": [
                    {
                        "name": "forum",
                        "in": "path",
                        "description": "Forum UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "content"
                                ],
                                "properties": {
                                    "content": {
                                        "type": "string",
                                        "maxLength": 10000,
                                        "minLength": 1,
                                        "example": "This is my post content"
                                    },
                                    "parent_id": {
                                        "description": "ID of parent post for replies",
                                        "type": "integer",
                                        "example": 123,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Post created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Post created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "uuid": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "content": {
                                                    "type": "string"
                                                },
                                                "is_pinned": {
                                                    "type": "boolean"
                                                },
                                                "is_solution": {
                                                    "type": "boolean"
                                                },
                                                "likes_count": {
                                                    "type": "integer"
                                                },
                                                "replies_count": {
                                                    "type": "integer"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized to post in forum",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to post in this forum"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or invalid parent post",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid parent post"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/forum-posts/{post}": {
            "get": {
                "tags": [
                    "Forum Posts"
                ],
                "summary": "Get a specific post with its replies",
                "description": "Retrieves a specific forum post with all its replies and metadata",
                "operationId": "getForumPost",
                "parameters": [
                    {
                        "name": "post",
                        "in": "path",
                        "description": "Post UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Post retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "uuid": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "content": {
                                                    "type": "string"
                                                },
                                                "is_pinned": {
                                                    "type": "boolean"
                                                },
                                                "is_solution": {
                                                    "type": "boolean"
                                                },
                                                "likes_count": {
                                                    "type": "integer"
                                                },
                                                "replies_count": {
                                                    "type": "integer"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "uuid": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "forum": {
                                                    "properties": {
                                                        "uuid": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                        },
                                                        "title": {
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "replies": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "uuid": {
                                                                "type": "string",
                                                                "format": "uuid"
                                                            },
                                                            "content": {
                                                                "type": "string"
                                                            },
                                                            "user": {
                                                                "properties": {
                                                                    "uuid": {
                                                                        "type": "string",
                                                                        "format": "uuid"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Post not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Forum Posts"
                ],
                "summary": "Update a post",
                "description": "Updates a forum post. Only the post author can edit their posts.",
                "operationId": "updateForumPost",
                "parameters": [
                    {
                        "name": "post",
                        "in": "path",
                        "description": "Post UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "content"
                                ],
                                "properties": {
                                    "content": {
                                        "type": "string",
                                        "maxLength": 10000,
                                        "minLength": 1,
                                        "example": "Updated post content"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Post updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Post updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "uuid": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "content": {
                                                    "type": "string"
                                                },
                                                "edited_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized to edit post",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to edit this post"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Forum Posts"
                ],
                "summary": "Delete a post",
                "description": "Deletes a forum post. Only post author, forum host, or admin can delete posts.",
                "operationId": "deleteForumPost",
                "parameters": [
                    {
                        "name": "post",
                        "in": "path",
                        "description": "Post UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Post deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized to delete post",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to delete this post"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Post not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/forum-posts/{post}/like": {
            "post": {
                "tags": [
                    "Forum Posts"
                ],
                "summary": "Toggle like on a post",
                "description": "Like or unlike a forum post",
                "operationId": "toggleLikeForumPost",
                "parameters": [
                    {
                        "name": "post",
                        "in": "path",
                        "description": "Post UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post liked/unliked successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Post liked"
                                        },
                                        "data": {
                                            "properties": {
                                                "liked": {
                                                    "type": "boolean"
                                                },
                                                "likes_count": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Post not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/forum-posts/{post}/pin": {
            "post": {
                "tags": [
                    "Forum Posts"
                ],
                "summary": "Pin/unpin a post",
                "description": "Pin or unpin a forum post. Only event hosts and admins can pin posts.",
                "operationId": "togglePinForumPost",
                "parameters": [
                    {
                        "name": "post",
                        "in": "path",
                        "description": "Post UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post pinned/unpinned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Post pinned"
                                        },
                                        "data": {
                                            "properties": {
                                                "is_pinned": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized to pin posts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to pin posts"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Post not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/forum-posts/{post}/solution": {
            "post": {
                "tags": [
                    "Forum Posts"
                ],
                "summary": "Mark post as solution",
                "description": "Mark a post as the solution in Q&A forums. Only post author, event host, or admin can mark solutions.",
                "operationId": "markPostAsSolution",
                "parameters": [
                    {
                        "name": "post",
                        "in": "path",
                        "description": "Post UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post marked as solution successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Post marked as solution"
                                        },
                                        "data": {
                                            "properties": {
                                                "is_solution": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized to mark as solution",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to mark this as a solution"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Not a Q&A forum",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Solutions can only be marked in Q&A forums"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Post not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/events/{event}/resources": {
            "get": {
                "tags": [
                    "Resources"
                ],
                "summary": "Get event resources",
                "description": "Retrieve all resources for a specific event",
                "operationId": "8ff4f0e2b8d466519d73829f5f218a67",
                "parameters": [
                    {
                        "name": "event",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by resource type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "presentation",
                                "paper",
                                "recording",
                                "agenda",
                                "other"
                            ]
                        }
                    },
                    {
                        "name": "public_only",
                        "in": "query",
                        "description": "Show only public resources",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resources retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EventResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Resources"
                ],
                "summary": "Upload event resource",
                "description": "Upload a new resource for an event (host only)",
                "operationId": "50e2eb4a82b4cdb477bdf9a5bcb2a920",
                "parameters": [
                    {
                        "name": "event",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "description": "Resource file",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "title": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "resource_type": {
                                        "type": "string",
                                        "enum": [
                                            "presentation",
                                            "paper",
                                            "recording",
                                            "agenda",
                                            "other"
                                        ]
                                    },
                                    "is_public": {
                                        "type": "boolean"
                                    },
                                    "is_downloadable": {
                                        "type": "boolean"
                                    },
                                    "requires_registration": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Resource uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/EventResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized to upload resources"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/resources/{resource}": {
            "get": {
                "tags": [
                    "Resources"
                ],
                "summary": "Get resource details",
                "description": "Retrieve detailed information about a specific resource",
                "operationId": "07d276b99ec854380fcae26c22ad23c7",
                "parameters": [
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/EventResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "403": {
                        "description": "Access denied"
                    }
                }
            },
            "put": {
                "tags": [
                    "Resources"
                ],
                "summary": "Update resource details",
                "description": "Update resource metadata (host/admin only)",
                "operationId": "1fc5e05332fbe319256a94482c7be4f4",
                "parameters": [
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "resource_type": {
                                        "type": "string",
                                        "enum": [
                                            "presentation",
                                            "paper",
                                            "recording",
                                            "agenda",
                                            "other"
                                        ]
                                    },
                                    "is_public": {
                                        "type": "boolean"
                                    },
                                    "is_downloadable": {
                                        "type": "boolean"
                                    },
                                    "requires_registration": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Resource updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/EventResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Resources"
                ],
                "summary": "Delete resource",
                "description": "Delete a resource and its file (host/admin only)",
                "operationId": "96987a030f4a111ff5ddda60a1b6aa61",
                "parameters": [
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/resources/{resource}/download": {
            "get": {
                "tags": [
                    "Resources"
                ],
                "summary": "Download resource file",
                "description": "Download a resource file if permitted",
                "operationId": "a3ded72a1fd1aff4bcbd3dbb73d474cf",
                "parameters": [
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File download",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Download not permitted"
                    },
                    "404": {
                        "description": "Resource or file not found"
                    }
                }
            }
        },
        "/api/v1/user-connections": {
            "get": {
                "tags": [
                    "User Connections"
                ],
                "summary": "Get user's connections",
                "description": "Retrieves all accepted connections for the authenticated user",
                "operationId": "getUserConnections",
                "responses": {
                    "200": {
                        "description": "Connections retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Connections retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "user": {
                                                        "properties": {
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Dr. Jane Smith"
                                                            },
                                                            "institution": {
                                                                "type": "string",
                                                                "example": "MIT"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "connected_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User Connections"
                ],
                "summary": "Send a connection request",
                "description": "Send a connection request to another user",
                "operationId": "sendConnectionRequest",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_uuid"
                                ],
                                "properties": {
                                    "user_uuid": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "550e8400-e29b-41d4-a716-446655440000"
                                    },
                                    "message": {
                                        "type": "string",
                                        "maxLength": 500,
                                        "example": "I'd like to connect with you"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Connection request sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Connection request sent successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "uuid": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "status": {
                                                    "type": "string"
                                                },
                                                "sent_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Cannot connect to yourself",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You cannot connect to yourself"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Connection already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Connection already exists"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/user-connections/pending": {
            "get": {
                "tags": [
                    "User Connections"
                ],
                "summary": "Get pending connection requests",
                "description": "Retrieves all pending connection requests for the authenticated user",
                "operationId": "getPendingConnections",
                "responses": {
                    "200": {
                        "description": "Pending requests retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Pending requests retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "uuid": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "requester": {
                                                        "properties": {
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "institution": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "sent_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/user-connections/{connection}/respond": {
            "put": {
                "tags": [
                    "User Connections"
                ],
                "summary": "Respond to a connection request",
                "description": "Accept or decline a connection request",
                "operationId": "respondToConnectionRequest",
                "parameters": [
                    {
                        "name": "connection",
                        "in": "path",
                        "description": "Connection ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "accepted",
                                            "declined"
                                        ],
                                        "example": "accepted"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Connection request responded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Connection request accepted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized to respond",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to respond to this request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid status or request already responded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This request has already been responded to"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/user-connections/{connection}": {
            "delete": {
                "tags": [
                    "User Connections"
                ],
                "summary": "Remove a connection",
                "description": "Delete an existing user connection",
                "operationId": "removeConnection",
                "parameters": [
                    {
                        "name": "connection",
                        "in": "path",
                        "description": "Connection ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Connection removed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Connection removed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized to remove connection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to remove this connection"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Connection not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Connection not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/user-connections/search": {
            "get": {
                "tags": [
                    "User Connections"
                ],
                "summary": "Search for users to connect with",
                "description": "Search for users by name, institution, or department to send connection requests",
                "operationId": "searchUsersToConnect",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Search query (name or other fields)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "minLength": 2
                        }
                    },
                    {
                        "name": "institution",
                        "in": "query",
                        "description": "Filter by institution",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "department",
                        "in": "query",
                        "description": "Filter by department",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Users found"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "uuid": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "institution": {
                                                        "type": "string"
                                                    },
                                                    "department": {
                                                        "type": "string"
                                                    },
                                                    "connection_status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "none",
                                                            "pending",
                                                            "accepted",
                                                            "declined"
                                                        ]
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/profile": {
            "get": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Get current user profile",
                "description": "Retrieve the authenticated user's profile information",
                "operationId": "getUserProfile",
                "responses": {
                    "200": {
                        "description": "Profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "uuid": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "first_name": {
                                                    "type": "string"
                                                },
                                                "last_name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "institution": {
                                                    "type": "string"
                                                },
                                                "department": {
                                                    "type": "string"
                                                },
                                                "position": {
                                                    "type": "string"
                                                },
                                                "bio": {
                                                    "type": "string"
                                                },
                                                "website": {
                                                    "type": "string"
                                                },
                                                "phone": {
                                                    "type": "string"
                                                },
                                                "avatar": {
                                                    "type": "string"
                                                },
                                                "social_links": {
                                                    "type": "object"
                                                },
                                                "account_status": {
                                                    "type": "string"
                                                },
                                                "hosted_events_count": {
                                                    "type": "integer"
                                                },
                                                "registered_events_count": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Update user profile",
                "description": "Update the authenticated user's profile information",
                "operationId": "updateUserProfile",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "institution": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "department": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "position": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "bio": {
                                        "type": "string",
                                        "maxLength": 1000
                                    },
                                    "website": {
                                        "type": "string",
                                        "format": "url"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "maxLength": 20
                                    },
                                    "social_links": {
                                        "properties": {
                                            "twitter": {
                                                "type": "string"
                                            },
                                            "linkedin": {
                                                "type": "string"
                                            },
                                            "orcid": {
                                                "type": "string"
                                            },
                                            "researchgate": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/profile/avatar": {
            "post": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Upload user avatar",
                "description": "Upload and update the authenticated user's avatar image",
                "operationId": "updateUserAvatar",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "avatar": {
                                        "description": "Avatar image file (JPEG, PNG, JPG, GIF, max 2MB)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Avatar updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Avatar updated successfully"
                                        },
                                        "avatar_url": {
                                            "type": "string",
                                            "example": "https://example.com/storage/avatars/user123.jpg"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Delete user avatar",
                "description": "Delete the authenticated user's avatar image",
                "operationId": "deleteUserAvatar",
                "responses": {
                    "200": {
                        "description": "Avatar deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Avatar deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No avatar to delete"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/profile/stats": {
            "get": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Get user statistics",
                "description": "Get detailed statistics for the authenticated user",
                "operationId": "getUserStats",
                "responses": {
                    "200": {
                        "description": "Statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Statistics retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "hosted_events_total": {
                                                    "type": "integer"
                                                },
                                                "hosted_events_upcoming": {
                                                    "type": "integer"
                                                },
                                                "hosted_events_completed": {
                                                    "type": "integer"
                                                },
                                                "registered_events_total": {
                                                    "type": "integer"
                                                },
                                                "registered_events_upcoming": {
                                                    "type": "integer"
                                                },
                                                "total_attendees_hosted": {
                                                    "type": "integer"
                                                },
                                                "profile_completion": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "first_name": {
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@university.edu"
                    },
                    "institution": {
                        "type": "string",
                        "example": "University of Technology"
                    },
                    "department": {
                        "type": "string",
                        "example": "Computer Science"
                    },
                    "position": {
                        "type": "string",
                        "example": "Professor"
                    },
                    "bio": {
                        "type": "string",
                        "nullable": true
                    },
                    "website": {
                        "type": "string",
                        "nullable": true
                    },
                    "phone": {
                        "type": "string",
                        "nullable": true
                    },
                    "avatar": {
                        "type": "string",
                        "nullable": true
                    },
                    "social_links": {
                        "type": "object",
                        "nullable": true
                    },
                    "account_status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "active",
                            "suspended"
                        ]
                    },
                    "is_admin": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Event": {
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "title": {
                        "type": "string",
                        "example": "AI in Academic Research"
                    },
                    "description": {
                        "type": "string"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "location_type": {
                        "type": "string",
                        "enum": [
                            "physical",
                            "virtual",
                            "hybrid"
                        ]
                    },
                    "location": {
                        "type": "string",
                        "nullable": true
                    },
                    "virtual_link": {
                        "type": "string",
                        "nullable": true
                    },
                    "capacity": {
                        "type": "integer",
                        "nullable": true
                    },
                    "visibility": {
                        "type": "string",
                        "enum": [
                            "public",
                            "private"
                        ]
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "published",
                            "banned"
                        ]
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "host": {
                        "$ref": "#/components/schemas/User"
                    },
                    "registrations_count": {
                        "type": "integer"
                    },
                    "user_registered": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "PaginationMeta": {
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "last_page": {
                        "type": "integer",
                        "example": 5
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 15
                    },
                    "total": {
                        "type": "integer",
                        "example": 75
                    }
                },
                "type": "object"
            },
            "EventRegistration": {
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "event": {
                        "$ref": "#/components/schemas/Event"
                    },
                    "notes": {
                        "type": "string",
                        "nullable": true
                    },
                    "registered_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ErrorResponse": {
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "object",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "EventResource": {
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "original_filename": {
                        "type": "string"
                    },
                    "file_type": {
                        "type": "string"
                    },
                    "file_size": {
                        "type": "integer"
                    },
                    "file_size_formatted": {
                        "type": "string"
                    },
                    "resource_type": {
                        "type": "string",
                        "enum": [
                            "presentation",
                            "paper",
                            "recording",
                            "agenda",
                            "other"
                        ]
                    },
                    "is_public": {
                        "type": "boolean"
                    },
                    "is_downloadable": {
                        "type": "boolean"
                    },
                    "requires_registration": {
                        "type": "boolean"
                    },
                    "download_count": {
                        "type": "integer"
                    },
                    "view_count": {
                        "type": "integer"
                    },
                    "event": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Event"
                            }
                        ],
                        "nullable": true
                    },
                    "uploaded_by": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/User"
                            }
                        ],
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "description": "Laravel Sanctum token authentication",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Analytics",
            "description": "Platform analytics and metrics for administrators"
        },
        {
            "name": "Authentication",
            "description": "User authentication and account management"
        },
        {
            "name": "Events",
            "description": "Event management operations"
        },
        {
            "name": "Forums",
            "description": "Discussion forum management operations"
        },
        {
            "name": "Resources",
            "description": "Event resource management operations"
        },
        {
            "name": "User Profile",
            "description": "User profile management endpoints"
        },
        {
            "name": "Admin",
            "description": "Admin"
        },
        {
            "name": "Forum Posts",
            "description": "Forum Posts"
        },
        {
            "name": "User Connections",
            "description": "User Connections"
        }
    ]
}