{
    "openapi": "3.0.0",
    "info": {
        "title": "Academia World API",
        "description": "**Academia World** is a comprehensive academic event management and collaboration platform designed to facilitate scholarly networking, conference organization, and academic resource sharing.\n\n## Features\n\n- **Event Management**: Create, manage, and participate in academic conferences, workshops, and seminars\n- **Academic Networking**: Connect with fellow researchers and build professional relationships  \n- **Resource Sharing**: Upload, share, and access academic materials with granular permission controls\n- **Discussion Forums**: Engage in structured academic discourse with moderation capabilities\n- **User Management**: Comprehensive user profiles with institutional affiliations and academic credentials\n\n## Authentication\n\nThis API uses **Laravel Sanctum** with both cookie-based and token-based authentication:\n\n- **Cookie Authentication**: Automatically handled for web clients after login\n- **Bearer Token**: Use `Authorization: Bearer {token}` header for API clients\n\n## Base URL\n\n- **Development**: `http://localhost:8000`\n- **Production**: `https://your-domain.com`\n\n## Rate Limiting\n\n- **General API**: 60 requests per minute\n- **Authentication**: 5 requests per minute\n\n## Error Handling\n\nAll endpoints return consistent error responses with HTTP status codes and descriptive messages.",
        "contact": {
            "name": "Academia World Support",
            "email": "support@academiaworld.com"
        },
        "license": {
            "name": "MIT License",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "Local Development Server"
        },
        {
            "url": "https://api.academiaworld.com",
            "description": "Production Server"
        }
    ],
    "paths": {
        "/api/v1/admin/dashboard": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get admin dashboard overview",
                "description": "Retrieve comprehensive platform statistics and recent activity for admin dashboard",
                "operationId": "getAdminDashboard",
                "responses": {
                    "200": {
                        "description": "Dashboard data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Admin dashboard data retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "total_users": {
                                                    "description": "Total number of users",
                                                    "type": "integer"
                                                },
                                                "total_events": {
                                                    "description": "Total number of events",
                                                    "type": "integer"
                                                },
                                                "total_forums": {
                                                    "description": "Total number of forums",
                                                    "type": "integer"
                                                },
                                                "total_posts": {
                                                    "description": "Total number of forum posts",
                                                    "type": "integer"
                                                },
                                                "recent_users": {
                                                    "description": "5 most recent user registrations",
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "email": {
                                                                "type": "string"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "recent_events": {
                                                    "description": "5 most recent events",
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "uuid": {
                                                                "type": "string",
                                                                "format": "uuid"
                                                            },
                                                            "title": {
                                                                "type": "string"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "recent_admin_actions": {
                                                    "description": "10 most recent admin actions",
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "admin_id": {
                                                                "type": "integer"
                                                            },
                                                            "action": {
                                                                "type": "string"
                                                            },
                                                            "target_type": {
                                                                "type": "string"
                                                            },
                                                            "target_id": {
                                                                "type": "integer"
                                                            },
                                                            "description": {
                                                                "type": "string"
                                                            },
                                                            "severity": {
                                                                "type": "string"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied - Admin privileges required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/admin/users": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get all users with filtering",
                "description": "Retrieve all platform users with filtering and pagination options for admin management",
                "operationId": "getAdminUsers",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search users by name or email",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_admin",
                        "in": "query",
                        "description": "Filter by admin status",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "is_banned",
                        "in": "query",
                        "description": "Filter by ban status",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of users per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20,
                            "maximum": 100,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Users retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "uuid": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "first_name": {
                                                        "type": "string"
                                                    },
                                                    "last_name": {
                                                        "type": "string"
                                                    },
                                                    "full_name": {
                                                        "type": "string"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "format": "email"
                                                    },
                                                    "institution": {
                                                        "type": "string"
                                                    },
                                                    "department": {
                                                        "type": "string"
                                                    },
                                                    "position": {
                                                        "type": "string"
                                                    },
                                                    "account_status": {
                                                        "type": "string"
                                                    },
                                                    "is_admin": {
                                                        "type": "boolean"
                                                    },
                                                    "is_banned": {
                                                        "type": "boolean"
                                                    },
                                                    "ban_reason": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "banned_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "nullable": true
                                                    },
                                                    "email_verified_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "nullable": true
                                                    },
                                                    "last_login_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "nullable": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Create a new admin user",
                "description": "Create a new user account with admin privileges",
                "operationId": "createAdmin",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "first_name": {
                                        "description": "First name of the admin",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "description": "Last name of the admin",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "description": "Email address (must be unique)",
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255,
                                        "example": "admin@university.edu"
                                    },
                                    "password": {
                                        "description": "Password (minimum 8 characters)",
                                        "type": "string",
                                        "minLength": 8,
                                        "example": "SecurePass123"
                                    },
                                    "password_confirmation": {
                                        "description": "Password confirmation",
                                        "type": "string",
                                        "example": "SecurePass123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Admin created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Admin created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "first_name": {
                                                    "type": "string"
                                                },
                                                "last_name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/admin/users/{user}/ban": {
            "put": {
                "tags": [
                    "Admin"
                ],
                "summary": "Ban or unban a user",
                "description": "Ban a user from the platform with a specified reason, or unban if already banned",
                "operationId": "banUser",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "reason"
                                ],
                                "properties": {
                                    "reason": {
                                        "description": "Reason for banning the user",
                                        "type": "string",
                                        "maxLength": 500,
                                        "example": "Violating community guidelines"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User banned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User banned successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Cannot ban admin user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot ban an admin user"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/admin/users/{user}/unban": {
            "put": {
                "tags": [
                    "Admin"
                ],
                "summary": "Unban a user",
                "description": "Remove ban from a previously banned user",
                "operationId": "unbanUser",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User unbanned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User unbanned successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/admin/users/{user}/promote": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Promote user to admin",
                "description": "Grant admin privileges to a regular user",
                "operationId": "promoteUser",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User promoted to admin successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User promoted to admin successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "User is already an admin",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User is already an admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/admin/users/{user}/demote": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Demote admin to regular user",
                "description": "Remove admin privileges from an admin user",
                "operationId": "demoteUser",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin demoted to user successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Admin demoted to user successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "User is not an admin",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User is not an admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Cannot demote yourself",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot demote yourself"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/admin/logs": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get admin activity logs",
                "description": "Retrieve admin activity logs with filtering options for audit trail",
                "operationId": "getAdminLogs",
                "parameters": [
                    {
                        "name": "admin_uuid",
                        "in": "query",
                        "description": "Filter by specific admin UUID",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "Filter by action type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "user_ban",
                                "user_unban",
                                "user_promote",
                                "user_demote",
                                "event_ban",
                                "event_unban",
                                "post_delete"
                            ]
                        }
                    },
                    {
                        "name": "target_type",
                        "in": "query",
                        "description": "Filter by target type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "user",
                                "event",
                                "post",
                                "forum_post"
                            ]
                        }
                    },
                    {
                        "name": "target_uuid",
                        "in": "query",
                        "description": "Filter by target ID (use with target_type)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "severity",
                        "in": "query",
                        "description": "Filter by severity level",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "info",
                                "warning",
                                "medium",
                                "high",
                                "critical"
                            ]
                        }
                    },
                    {
                        "name": "days",
                        "in": "query",
                        "description": "Limit to recent days",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 365,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of logs per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 50,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin logs retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Admin logs retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "uuid": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "action": {
                                                        "type": "string"
                                                    },
                                                    "target_type": {
                                                        "type": "string"
                                                    },
                                                    "target_uuid": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "changes": {
                                                        "type": "object"
                                                    },
                                                    "metadata": {
                                                        "type": "object"
                                                    },
                                                    "ip_address": {
                                                        "type": "string"
                                                    },
                                                    "severity": {
                                                        "type": "string"
                                                    },
                                                    "admin": {
                                                        "properties": {
                                                            "uuid": {
                                                                "type": "string",
                                                                "format": "uuid"
                                                            },
                                                            "first_name": {
                                                                "type": "string"
                                                            },
                                                            "last_name": {
                                                                "type": "string"
                                                            },
                                                            "email": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/admin/events": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get all events for admin management",
                "description": "Retrieve all events with filtering options for administrative oversight",
                "operationId": "getAdminEvents",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by event status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "draft",
                                "published",
                                "cancelled",
                                "completed",
                                "banned"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search events by title or description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of events per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Events retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Events retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "uuid": {
                                                        "type": "string"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    },
                                                    "status": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/admin/events/{event}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get event details for admin",
                "description": "Retrieve detailed event information including registrations, resources, and forums for admin oversight",
                "operationId": "getAdminEventDetails",
                "parameters": [
                    {
                        "name": "event",
                        "in": "path",
                        "description": "Event UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Event details retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "uuid": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "title": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string"
                                                },
                                                "location_type": {
                                                    "type": "string"
                                                },
                                                "location": {
                                                    "type": "string"
                                                },
                                                "meeting_link": {
                                                    "type": "string"
                                                },
                                                "start_date": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "end_date": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "capacity": {
                                                    "type": "integer"
                                                },
                                                "registration_deadline": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "host": {
                                                    "type": "object"
                                                },
                                                "registrations": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "registration_count": {
                                                    "type": "integer"
                                                },
                                                "resources_count": {
                                                    "type": "integer"
                                                },
                                                "forums_count": {
                                                    "type": "integer"
                                                },
                                                "available_spots": {
                                                    "type": "integer"
                                                },
                                                "is_full": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin"
                ],
                "summary": "Delete an event",
                "description": "Delete an event and all associated data (soft delete)",
                "operationId": "deleteEvent",
                "parameters": [
                    {
                        "name": "event",
                        "in": "path",
                        "description": "Event UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Event deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/admin/events/{event}/status": {
            "put": {
                "tags": [
                    "Admin"
                ],
                "summary": "Update event status",
                "description": "Update the status of an event (admin only)",
                "operationId": "updateEventStatus",
                "parameters": [
                    {
                        "name": "event",
                        "in": "path",
                        "description": "Event UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "description": "New event status",
                                        "type": "string",
                                        "enum": [
                                            "draft",
                                            "published",
                                            "cancelled",
                                            "completed"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Event status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Event status updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "uuid": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "title": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/admin/events/{event}/ban": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Ban an event",
                "description": "Ban an event making it invisible to non-admin users",
                "operationId": "banEvent",
                "parameters": [
                    {
                        "name": "event",
                        "in": "path",
                        "description": "Event UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "reason"
                                ],
                                "properties": {
                                    "reason": {
                                        "description": "Reason for banning the event",
                                        "type": "string",
                                        "maxLength": 500
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Event banned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Event banned successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "uuid": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "title": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "banned"
                                                },
                                                "reason": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/events/{event}/unban": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Unban an event",
                "description": "Restore a banned event to published status",
                "operationId": "unbanEvent",
                "parameters": [
                    {
                        "name": "event",
                        "in": "path",
                        "description": "Event UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event unbanned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Event unbanned successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "uuid": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "title": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "published"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Event is not currently banned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Event is not currently banned"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/events/{event}/force-delete": {
            "delete": {
                "tags": [
                    "Admin"
                ],
                "summary": "Permanently delete an event",
                "description": "Permanently delete an event and all associated data. This action cannot be undone.",
                "operationId": "forceDeleteEvent",
                "parameters": [
                    {
                        "name": "event",
                        "in": "path",
                        "description": "Event UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "confirmation",
                                    "reason"
                                ],
                                "properties": {
                                    "confirmation": {
                                        "description": "Must be 'DELETE' to confirm",
                                        "type": "string",
                                        "enum": [
                                            "DELETE"
                                        ]
                                    },
                                    "reason": {
                                        "description": "Reason for permanent deletion",
                                        "type": "string",
                                        "maxLength": 500
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Event permanently deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Event permanently deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/posts": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get all forum posts for moderation",
                "description": "Retrieve forum posts with filtering options for admin moderation",
                "operationId": "getAdminForumPosts",
                "parameters": [
                    {
                        "name": "forum_id",
                        "in": "query",
                        "description": "Filter by specific forum ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "Filter by specific user ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "reported",
                        "in": "query",
                        "description": "Show only reported posts",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "date_range",
                        "in": "query",
                        "description": "Filter by date range",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "today",
                                "week",
                                "month"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of posts per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Forum posts retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Forum posts retrieved successfully"
                                        },
                                        "data": {
                                            "description": "Paginated forum posts",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/posts/{post}": {
            "delete": {
                "tags": [
                    "Admin"
                ],
                "summary": "Delete a forum post (admin moderation)",
                "description": "Delete a forum post as part of content moderation with reason logging",
                "operationId": "deleteForumPost",
                "parameters": [
                    {
                        "name": "post",
                        "in": "path",
                        "description": "Forum Post ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "reason"
                                ],
                                "properties": {
                                    "reason": {
                                        "description": "Reason for deleting the forum post",
                                        "type": "string",
                                        "maxLength": 500,
                                        "example": "Inappropriate content"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Forum post deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Forum post deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Forum post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/admin/platform-health": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get platform health metrics",
                "description": "Retrieve comprehensive platform health and system metrics",
                "operationId": "getPlatformHealth",
                "responses": {
                    "200": {
                        "description": "Platform health retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Platform health retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "database": {
                                                    "properties": {
                                                        "status": {
                                                            "type": "string",
                                                            "example": "healthy"
                                                        },
                                                        "connections": {
                                                            "type": "string",
                                                            "example": "active"
                                                        },
                                                        "last_backup": {
                                                            "type": "string",
                                                            "nullable": true
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "active_users_24h": {
                                                    "type": "integer"
                                                },
                                                "system_resources": {
                                                    "properties": {
                                                        "memory_usage": {
                                                            "type": "integer"
                                                        },
                                                        "peak_memory": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "event_statistics": {
                                                    "properties": {
                                                        "total_events": {
                                                            "type": "integer"
                                                        },
                                                        "active_events": {
                                                            "type": "integer"
                                                        },
                                                        "upcoming_events": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "timestamp": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/analytics/overview": {
            "get": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Get platform overview statistics",
                "description": "Retrieve comprehensive platform statistics for the specified time period",
                "operationId": "getPlatformOverview",
                "parameters": [
                    {
                        "name": "days",
                        "in": "query",
                        "description": "Number of days to include in statistics",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 365,
                            "minimum": 1,
                            "example": 30
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Platform overview retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Platform overview retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "total_users": {
                                                    "type": "integer"
                                                },
                                                "total_events": {
                                                    "type": "integer"
                                                },
                                                "total_registrations": {
                                                    "type": "integer"
                                                },
                                                "active_users": {
                                                    "type": "integer"
                                                },
                                                "growth_metrics": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied - Admin privileges required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Access denied"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/admin/analytics/user-engagement": {
            "get": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Get user engagement analytics",
                "description": "Retrieve user engagement metrics for the specified date range",
                "operationId": "getUserEngagementAnalytics",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start date for analytics (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "End date for analytics (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User engagement analytics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User engagement analytics retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "metrics": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "summary": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/admin/analytics/event-engagement": {
            "get": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Get event engagement analytics",
                "description": "Retrieve event engagement metrics for the specified date range",
                "operationId": "getEventEngagementAnalytics",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start date for analytics (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "End date for analytics (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event engagement analytics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Event engagement analytics retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "metrics": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "summary": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/admin/analytics/forum-activity": {
            "get": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Get forum activity analytics",
                "description": "Retrieve forum activity metrics for the specified date range",
                "operationId": "getForumActivityAnalytics",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start date for analytics (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "End date for analytics (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Forum activity analytics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Forum activity analytics retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "metrics": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "summary": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/admin/analytics/generate-daily": {
            "post": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Generate daily metrics manually",
                "description": "Manually trigger the generation of daily analytics metrics for a specific date",
                "operationId": "generateDailyMetrics",
                "parameters": [
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Date to generate metrics for (YYYY-MM-DD format)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-01-15"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Daily metrics generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Daily metrics generated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "date": {
                                                    "type": "string",
                                                    "format": "date"
                                                },
                                                "metrics_generated": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "user_engagement": {
                                                    "type": "object"
                                                },
                                                "event_activity": {
                                                    "type": "object"
                                                },
                                                "forum_metrics": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid date format or future date",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new academic user account",
                "description": "Creates a new user account for academic professionals including researchers, faculty, students, and staff. The account requires email verification before activation. All fields except department and position are required for academic verification purposes.",
                "operationId": "registerUser",
                "requestBody": {
                    "description": "Academic user registration information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "institution"
                                ],
                                "properties": {
                                    "first_name": {
                                        "description": "User's first name or preferred name (including titles if desired)",
                                        "type": "string",
                                        "maxLength": 255,
                                        "minLength": 1,
                                        "example": "Dr. Sarah"
                                    },
                                    "last_name": {
                                        "description": "User's last name or surname",
                                        "type": "string",
                                        "maxLength": 255,
                                        "minLength": 1,
                                        "example": "Johnson"
                                    },
                                    "email": {
                                        "description": "Academic email address (must be unique across the platform). Preferably use institutional email.",
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255,
                                        "example": "sarah.johnson@university.edu"
                                    },
                                    "password": {
                                        "description": "Password with minimum 8 characters. Should include uppercase, lowercase, numbers, and special characters for security.",
                                        "type": "string",
                                        "minLength": 8,
                                        "example": "AcademicPass2025!"
                                    },
                                    "password_confirmation": {
                                        "description": "Password confirmation - must exactly match the password field",
                                        "type": "string",
                                        "example": "AcademicPass2025!"
                                    },
                                    "institution": {
                                        "description": "Full name of the academic institution, university, or research organization",
                                        "type": "string",
                                        "maxLength": 255,
                                        "minLength": 1,
                                        "example": "Massachusetts Institute of Technology"
                                    },
                                    "department": {
                                        "description": "Academic department, school, or faculty within the institution (optional)",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Department of Computer Science and Artificial Intelligence",
                                        "nullable": true
                                    },
                                    "position": {
                                        "description": "Academic position, title, or role (e.g., Professor, PhD Student, Research Associate, Postdoc) (optional)",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Associate Professor",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registration successful - email verification required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Registration successful. Please check your email for verification."
                                        },
                                        "user": {
                                            "description": "Basic user information (sensitive data excluded)",
                                            "properties": {
                                                "uuid": {
                                                    "description": "Unique user identifier",
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "550e8400-e29b-41d4-a716-446655440000"
                                                },
                                                "name": {
                                                    "description": "Full display name",
                                                    "type": "string",
                                                    "example": "Dr. Sarah Johnson"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "sarah.johnson@university.edu"
                                                },
                                                "institution": {
                                                    "type": "string",
                                                    "example": "Massachusetts Institute of Technology"
                                                },
                                                "account_status": {
                                                    "description": "Account requires email verification",
                                                    "type": "string",
                                                    "example": "pending"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors in submitted data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "description": "Field-specific validation errors",
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email has already been taken."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password confirmation does not match."
                                                    }
                                                },
                                                "institution": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The institution field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error during registration",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Registration failed due to server error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred. Please try again or contact support if the problem persists."
                                        },
                                        "error_code": {
                                            "type": "string",
                                            "example": "REGISTRATION_FAILED"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many registration attempts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Too many registration attempts. Please try again later."
                                        },
                                        "retry_after": {
                                            "description": "Seconds to wait before retry",
                                            "type": "integer",
                                            "example": 60
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate academic user and establish session",
                "description": "Authenticates a registered academic user using email and password credentials. Upon successful authentication, returns an access token and sets an HTTP-only authentication cookie for seamless web client integration. Supports both cookie-based and token-based authentication flows.",
                "operationId": "loginUser",
                "requestBody": {
                    "description": "User login credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "Registered email address of the academic user",
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255,
                                        "example": "sarah.johnson@university.edu"
                                    },
                                    "password": {
                                        "description": "User's account password",
                                        "type": "string",
                                        "minLength": 1,
                                        "example": "AcademicPass2025!"
                                    },
                                    "remember_me": {
                                        "description": "Extend token validity for long-term sessions (optional)",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Authentication successful - user logged in",
                        "headers": {
                            "Set-Cookie": {
                                "description": "HTTP-only authentication cookie for automatic session management",
                                "schema": {
                                    "type": "string",
                                    "example": "academia_world_token=1|AbCdEfGhIjKlMnOpQrStUvWxYz; Path=/; HttpOnly; Secure; SameSite=Lax; Max-Age=172800"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "access_token": {
                                            "description": "Bearer token for API authentication",
                                            "type": "string",
                                            "example": "1|AbCdEfGhIjKlMnOpQrStUvWxYz1234567890abcdefghijklmnopqrstuvwxyz"
                                        },
                                        "token_type": {
                                            "description": "Type of authentication token",
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "expires_in": {
                                            "description": "Token expiration time in minutes (4 months)",
                                            "type": "integer",
                                            "example": 172800
                                        },
                                        "user": {
                                            "description": "Authenticated user profile",
                                            "properties": {
                                                "uuid": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "550e8400-e29b-41d4-a716-446655440000"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Dr. Sarah Johnson"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "sarah.johnson@university.edu"
                                                },
                                                "institution": {
                                                    "type": "string",
                                                    "example": "Massachusetts Institute of Technology"
                                                },
                                                "department": {
                                                    "type": "string",
                                                    "example": "Computer Science",
                                                    "nullable": true
                                                },
                                                "position": {
                                                    "type": "string",
                                                    "example": "Associate Professor",
                                                    "nullable": true
                                                },
                                                "account_status": {
                                                    "type": "string",
                                                    "example": "active"
                                                },
                                                "is_admin": {
                                                    "type": "boolean",
                                                    "example": false
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed - invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials. Please check your email and password."
                                        },
                                        "error_code": {
                                            "type": "string",
                                            "example": "INVALID_CREDENTIALS"
                                        },
                                        "suggestions": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "Verify your email address is correct",
                                                "Use 'Forgot Password' if you can't remember your password",
                                                "Ensure your account is not suspended"
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Account requires verification or is suspended",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Account requires email verification before login."
                                        },
                                        "error_code": {
                                            "type": "string",
                                            "example": "EMAIL_NOT_VERIFIED"
                                        },
                                        "action_required": {
                                            "type": "string",
                                            "example": "email_verification"
                                        },
                                        "resolution": {
                                            "description": "Steps to resolve the issue",
                                            "properties": {
                                                "resend_verification": {
                                                    "type": "string",
                                                    "example": "/api/v1/auth/resend-verification"
                                                },
                                                "support_contact": {
                                                    "type": "string",
                                                    "example": "If you need assistance, contact support@academiaworld.com"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors in request data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many login attempts - rate limited",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Too many login attempts. Account temporarily locked."
                                        },
                                        "retry_after": {
                                            "description": "Seconds until next login attempt allowed",
                                            "type": "integer",
                                            "example": 300
                                        },
                                        "lockout_expires": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-08-06T15:35:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error during authentication",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/user": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get current user",
                "description": "Get current authenticated user information. Authentication can be provided via Bearer token or HTTP-only cookie.",
                "operationId": "d0e394c8b0ce07e35936025b95de8ce2",
                "responses": {
                    "200": {
                        "description": "User information retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "uuid": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "550e8400-e29b-41d4-a716-446655440000"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "john.doe@university.edu"
                                                },
                                                "institution": {
                                                    "type": "string",
                                                    "example": "University of Technology"
                                                },
                                                "department": {
                                                    "type": "string",
                                                    "example": "Computer Science"
                                                },
                                                "position": {
                                                    "type": "string",
                                                    "example": "Professor"
                                                },
                                                "account_status": {
                                                    "type": "string",
                                                    "example": "active"
                                                },
                                                "is_admin": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "hosted_events_count": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "registered_events_count": {
                                                    "type": "integer",
                                                    "example": 12
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    },
                    {
                        "cookieAuth": []
                    }
                ]
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Securely logout academic user and terminate session",
                "description": "Safely terminates the user's authenticated session by invalidating all active access tokens and clearing HTTP-only authentication cookies. This ensures complete session cleanup and security. The logout action is tracked for security auditing and analytics purposes.",
                "operationId": "logoutUser",
                "requestBody": {
                    "description": "No request body required for logout",
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Empty request body",
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User successfully logged out and session terminated",
                        "headers": {
                            "Set-Cookie": {
                                "description": "Clears the HTTP-only authentication cookie",
                                "schema": {
                                    "type": "string",
                                    "example": "academia_world_token=; Path=/; HttpOnly; Secure; SameSite=Lax; Max-Age=0; Expires=Thu, 01 Jan 1970 00:00:00 GMT"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated or session already expired",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error during logout process",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred during logout. Please try again."
                                        },
                                        "error_code": {
                                            "type": "string",
                                            "example": "LOGOUT_ERROR"
                                        },
                                        "support_note": {
                                            "type": "string",
                                            "example": "If this error persists, please contact support@academiaworld.com"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/auth/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh access token",
                "description": "Refresh the current access token with a new one",
                "operationId": "24439620f349c61e54353644309234a4",
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Token refreshed successfully"
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "example": "1|NEW_TOKEN_HERE"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "expires_in": {
                                            "description": "Token expiration in minutes",
                                            "type": "integer",
                                            "example": 172800
                                        },
                                        "user": {
                                            "properties": {
                                                "uuid": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "550e8400-e29b-41d4-a716-446655440000"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Dr. Sarah Johnson"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "sarah.johnson@university.edu"
                                                },
                                                "institution": {
                                                    "type": "string",
                                                    "example": "Massachusetts Institute of Technology"
                                                },
                                                "department": {
                                                    "type": "string",
                                                    "example": "Computer Science",
                                                    "nullable": true
                                                },
                                                "position": {
                                                    "type": "string",
                                                    "example": "Associate Professor",
                                                    "nullable": true
                                                },
                                                "account_status": {
                                                    "type": "string",
                                                    "example": "active"
                                                },
                                                "is_admin": {
                                                    "type": "boolean",
                                                    "example": false
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/auth/forgot-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send password reset link",
                "description": "Send password reset link to user email",
                "operationId": "b5e714b501087d87ed7ce9d58b2452a2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@university.edu"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset link sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset link sent to your email"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation errors"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unable to send reset link",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unable to send reset link"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/reset-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset user password",
                "description": "Reset user password using reset token",
                "operationId": "ec8ddaee958d34f4b8134a98c760c566",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "example": "reset_token_here"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@university.edu"
                                    },
                                    "password": {
                                        "type": "string",
                                        "minLength": 8,
                                        "example": "newpassword123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation errors"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Password reset failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/verify-email": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify academic user email address and establish authenticated session",
                "description": "Verifies a user's email address using a secure verification token sent via email during registration. Upon successful verification, the user's account is fully activated and they are automatically logged in with a long-term authentication session (4 months). This process completes the account setup flow for new academic users.",
                "operationId": "verifyUserEmail",
                "requestBody": {
                    "description": "Email verification token from verification email",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token"
                                ],
                                "properties": {
                                    "token": {
                                        "description": "Unique verification token received in email",
                                        "type": "string",
                                        "maxLength": 128,
                                        "minLength": 32,
                                        "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email verified successfully and user automatically logged in",
                        "headers": {
                            "Set-Cookie": {
                                "description": "Long-term HTTP-only authentication cookie (4 months)",
                                "schema": {
                                    "type": "string",
                                    "example": "academia_world_token=1|AbCdEfGhIjKlMnOpQrStUvWxYz; Path=/; HttpOnly; Secure; SameSite=Lax; Max-Age=10368000"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Email verified successfully. You are now logged in."
                                        },
                                        "access_token": {
                                            "description": "Long-term Bearer token for API authentication (4 months validity)",
                                            "type": "string",
                                            "example": "1|AbCdEfGhIjKlMnOpQrStUvWxYz1234567890abcdefghijklmnopqrstuvwxyz"
                                        },
                                        "token_type": {
                                            "description": "Type of authentication token",
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "expires_in": {
                                            "description": "Token expiration time in minutes (4 months = 172,800 minutes)",
                                            "type": "integer",
                                            "example": 172800
                                        },
                                        "user": {
                                            "description": "Verified user profile data",
                                            "properties": {
                                                "uuid": {
                                                    "type": "string",
                                                    "format": "uuid",
                                                    "example": "550e8400-e29b-41d4-a716-446655440000"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Dr. Sarah Johnson"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "sarah.johnson@university.edu"
                                                },
                                                "institution": {
                                                    "type": "string",
                                                    "example": "Stanford University"
                                                },
                                                "department": {
                                                    "type": "string",
                                                    "example": "Computer Science"
                                                },
                                                "position": {
                                                    "type": "string",
                                                    "example": "Assistant Professor"
                                                },
                                                "account_status": {
                                                    "description": "Account is now fully active",
                                                    "type": "string",
                                                    "example": "active"
                                                },
                                                "is_admin": {
                                                    "type": "boolean",
                                                    "example": false
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid, expired, or already used verification token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid or expired verification token"
                                        },
                                        "error_code": {
                                            "type": "string",
                                            "example": "INVALID_TOKEN"
                                        },
                                        "possible_causes": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "Token has expired (tokens are valid for 24 hours)",
                                                "Token has already been used",
                                                "Invalid token format",
                                                "Email already verified"
                                            ]
                                        },
                                        "resolution": {
                                            "description": "How to resolve the issue",
                                            "properties": {
                                                "resend_verification": {
                                                    "type": "string",
                                                    "example": "/api/v1/auth/resend-verification"
                                                },
                                                "support_contact": {
                                                    "type": "string",
                                                    "example": "support@academiaworld.com"
                                                },
                                                "login_page": {
                                                    "type": "string",
                                                    "example": "/login (if email is already verified)"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors in request data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "token": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The token field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error during verification process",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred during email verification. Please try again."
                                        },
                                        "error_code": {
                                            "type": "string",
                                            "example": "VERIFICATION_ERROR"
                                        },
                                        "support_note": {
                                            "type": "string",
                                            "example": "If this error persists, please contact support@academiaworld.com with your verification token."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/resend-verification": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Resend email verification to academic user",
                "description": "Generates and sends a new email verification link to an academic user who hasn't yet verified their email address. This is useful when the original verification email was not received, has expired, or was accidentally deleted. Only works for registered users with unverified email addresses.",
                "operationId": "resendVerificationEmail",
                "requestBody": {
                    "description": "Email address for verification resend",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "Registered email address that needs verification",
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255,
                                        "example": "sarah.johnson@university.edu"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Verification email sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Verification email sent successfully. Please check your inbox."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Email already verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email is already verified"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation errors"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to send verification email",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to send verification email"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/events": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Browse published academic events with advanced filtering and search",
                "description": "Retrieves a paginated list of published, public academic events with comprehensive filtering capabilities. This endpoint allows users to discover upcoming conferences, workshops, seminars, and other academic gatherings. Events are automatically filtered to show only future events that are publicly accessible.",
                "operationId": "browseAcademicEvents",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search across event titles, descriptions, locations, and tags using fuzzy matching",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 255,
                            "example": "machine learning conference"
                        }
                    },
                    {
                        "name": "location_type",
                        "in": "query",
                        "description": "Filter events by their delivery format",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "physical",
                                "virtual",
                                "hybrid"
                            ],
                            "example": "hybrid"
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Filter events starting from this date (inclusive). Events starting on this date or later will be included.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-08-15"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "Filter events ending before this date (inclusive). Events starting on this date or earlier will be included.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-12-31"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter events by academic category or discipline",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "computer-science"
                        }
                    },
                    {
                        "name": "host_institution",
                        "in": "query",
                        "description": "Filter events by hosting institution",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Stanford University"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination (starts from 1)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1,
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of events per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15,
                            "maximum": 50,
                            "minimum": 1,
                            "example": 15
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort events by field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "start_date",
                            "enum": [
                                "start_date",
                                "created_at",
                                "title",
                                "registration_count"
                            ],
                            "example": "start_date"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort order direction",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "asc",
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "example": "asc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Academic events retrieved successfully with pagination metadata",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Events retrieved successfully"
                                        },
                                        "data": {
                                            "description": "Array of academic events",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Event"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters or filters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid date format. Please use YYYY-MM-DD format."
                                        },
                                        "error_code": {
                                            "type": "string",
                                            "example": "INVALID_DATE_FORMAT"
                                        },
                                        "invalid_parameters": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "date_from",
                                                "date_to"
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error during event retrieval",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Create a new academic event for the platform",
                "description": "Creates a new academic event that will be automatically published and made available for registration. Academic users can create conferences, workshops, seminars, lectures, and other educational events. The event will be visible to all platform users based on its visibility settings and will support registration management.",
                "operationId": "createAcademicEvent",
                "requestBody": {
                    "description": "Complete event details for creation",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "description",
                                    "start_date",
                                    "end_date",
                                    "location_type",
                                    "visibility"
                                ],
                                "properties": {
                                    "title": {
                                        "description": "Clear, descriptive title of the academic event",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "International Conference on Artificial Intelligence in Healthcare"
                                    },
                                    "description": {
                                        "description": "Detailed description of the event content, objectives, and target audience",
                                        "type": "string",
                                        "example": "Join leading researchers and practitioners for a comprehensive exploration of AI applications in modern healthcare. This conference will cover machine learning in diagnostics, ethical considerations in AI-driven treatment, and future trends in medical AI research."
                                    },
                                    "start_date": {
                                        "description": "Event start date and time in ISO 8601 format (UTC)",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-10-15T09:00:00Z"
                                    },
                                    "end_date": {
                                        "description": "Event end date and time in ISO 8601 format (UTC). Must be after start_date.",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-10-17T17:00:00Z"
                                    },
                                    "timezone": {
                                        "description": "Event timezone (IANA timezone identifier). Defaults to UTC if not provided.",
                                        "type": "string",
                                        "maxLength": 50,
                                        "example": "America/New_York"
                                    },
                                    "location_type": {
                                        "description": "Format of event delivery: physical (in-person only), virtual (online only), or hybrid (both)",
                                        "type": "string",
                                        "enum": [
                                            "physical",
                                            "virtual",
                                            "hybrid"
                                        ],
                                        "example": "hybrid"
                                    },
                                    "location": {
                                        "description": "Physical venue address. Required for physical and hybrid events.",
                                        "type": "string",
                                        "maxLength": 500,
                                        "example": "Stanford University Medical Center, Main Auditorium, 300 Pasteur Drive, Stanford, CA 94305"
                                    },
                                    "virtual_link": {
                                        "description": "Online meeting link (Zoom, Teams, etc.). Required for virtual and hybrid events.",
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://zoom.us/j/123456789"
                                    },
                                    "capacity": {
                                        "description": "Maximum number of attendees. Leave null for unlimited capacity.",
                                        "type": "integer",
                                        "maximum": 10000,
                                        "minimum": 1,
                                        "example": 250
                                    },
                                    "visibility": {
                                        "description": "Event visibility: public (discoverable by all users) or private (invitation only)",
                                        "type": "string",
                                        "enum": [
                                            "public",
                                            "private"
                                        ],
                                        "example": "public"
                                    },
                                    "requirements": {
                                        "description": "Prerequisites or requirements for attendees",
                                        "type": "string",
                                        "maxLength": 1000,
                                        "example": "Basic knowledge of machine learning concepts recommended. Laptop required for hands-on sessions."
                                    },
                                    "tags": {
                                        "description": "Relevant tags for categorization and searchability",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "maxLength": 50
                                        },
                                        "example": [
                                            "AI",
                                            "Healthcare",
                                            "Machine Learning",
                                            "Medical Research",
                                            "Conference"
                                        ]
                                    },
                                    "poster": {
                                        "description": "Event poster image (JPEG, PNG, GIF). Maximum 2MB. Optional but recommended for better visibility.",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "registration_deadline": {
                                        "description": "Deadline for event registration. Defaults to event start date if not provided.",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-10-10T23:59:59Z"
                                    },
                                    "contact_email": {
                                        "description": "Contact email for event inquiries. Defaults to organizer's email.",
                                        "type": "string",
                                        "format": "email",
                                        "example": "conference@stanford.edu"
                                    },
                                    "website_url": {
                                        "description": "Official event website for additional information",
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://ai-healthcare-conference.stanford.edu"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Academic event created and published successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Event created and published successfully!"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Event"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors in event data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "title": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "The title field is required.",
                                                        "The title may not be greater than 255 characters."
                                                    ]
                                                },
                                                "start_date": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "The start date must be a date after now."
                                                    ]
                                                },
                                                "location": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "The location field is required when location type is physical or hybrid."
                                                    ]
                                                },
                                                "virtual_link": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "The virtual link must be a valid URL."
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You must be logged in to create events."
                                        },
                                        "error_code": {
                                            "type": "string",
                                            "example": "AUTHENTICATION_REQUIRED"
                                        },
                                        "login_url": {
                                            "type": "string",
                                            "example": "/api/v1/auth/login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "User lacks permission to create events",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Your account does not have permission to create events. Please verify your email or contact support."
                                        },
                                        "error_code": {
                                            "type": "string",
                                            "example": "INSUFFICIENT_PERMISSIONS"
                                        },
                                        "required_permissions": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "verified_email",
                                                "active_account"
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Uploaded poster file is too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The poster file is too large. Maximum size is 2MB."
                                        },
                                        "error_code": {
                                            "type": "string",
                                            "example": "FILE_TOO_LARGE"
                                        },
                                        "max_size": {
                                            "type": "string",
                                            "example": "2MB"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error during event creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while creating the event. Please try again."
                                        },
                                        "error_code": {
                                            "type": "string",
                                            "example": "EVENT_CREATION_FAILED"
                                        },
                                        "support_note": {
                                            "type": "string",
                                            "example": "If this error persists, please contact support@academiaworld.com"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/events/{event}": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Retrieve detailed information about a specific academic event",
                "description": "Fetches comprehensive details about a specific academic event including host information, registration status, available spots, and event resources. Only published events are accessible to the public, while event organizers can view their own unpublished events. The response includes registration statistics and user-specific information when authenticated.",
                "operationId": "getAcademicEventDetails",
                "parameters": [
                    {
                        "name": "event",
                        "in": "path",
                        "description": "Event UUID identifier",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    },
                    {
                        "name": "include_resources",
                        "in": "query",
                        "description": "Include associated resources in the response",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false,
                            "example": true
                        }
                    },
                    {
                        "name": "include_forums",
                        "in": "query",
                        "description": "Include discussion forums in the response",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false,
                            "example": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event details retrieved successfully with comprehensive information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Event retrieved successfully"
                                        },
                                        "data": {
                                            "description": "Complete event information with registration details",
                                            "properties": {
                                                "event": {
                                                    "$ref": "#/components/schemas/Event"
                                                },
                                                "registration_count": {
                                                    "description": "Current number of registered attendees",
                                                    "type": "integer",
                                                    "example": 47
                                                },
                                                "available_spots": {
                                                    "description": "Remaining registration spots (null if unlimited)",
                                                    "type": "integer",
                                                    "example": 153,
                                                    "nullable": true
                                                },
                                                "is_full": {
                                                    "description": "Whether the event has reached capacity",
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "user_registered": {
                                                    "description": "Whether the current user is registered (only for authenticated users)",
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "registration_status": {
                                                    "description": "Registration availability information",
                                                    "properties": {
                                                        "is_open": {
                                                            "description": "Whether registration is currently open",
                                                            "type": "boolean",
                                                            "example": true
                                                        },
                                                        "deadline": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2025-09-10T23:59:59Z",
                                                            "nullable": true
                                                        },
                                                        "requires_approval": {
                                                            "description": "Whether registrations require host approval",
                                                            "type": "boolean",
                                                            "example": false
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "event_statistics": {
                                                    "description": "Event engagement statistics",
                                                    "properties": {
                                                        "view_count": {
                                                            "description": "Number of times event has been viewed",
                                                            "type": "integer",
                                                            "example": 342
                                                        },
                                                        "share_count": {
                                                            "description": "Number of times event has been shared",
                                                            "type": "integer",
                                                            "example": 28
                                                        },
                                                        "forum_posts": {
                                                            "description": "Number of discussion forum posts",
                                                            "type": "integer",
                                                            "example": 15
                                                        },
                                                        "resources_count": {
                                                            "description": "Number of associated resources",
                                                            "type": "integer",
                                                            "example": 8
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "similar_events": {
                                                    "description": "Other events with similar tags or from the same host (maximum 3)",
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Event"
                                                    }
                                                },
                                                "accessibility_info": {
                                                    "description": "Accessibility and special requirements information",
                                                    "properties": {
                                                        "wheelchair_accessible": {
                                                            "type": "boolean",
                                                            "example": true,
                                                            "nullable": true
                                                        },
                                                        "sign_language": {
                                                            "type": "boolean",
                                                            "example": false,
                                                            "nullable": true
                                                        },
                                                        "live_captions": {
                                                            "type": "boolean",
                                                            "example": true,
                                                            "nullable": true
                                                        },
                                                        "special_needs_contact": {
                                                            "type": "string",
                                                            "example": "accessibility@university.edu",
                                                            "nullable": true
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event not found or not accessible",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Event not found or not accessible"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Events"
                ],
                "summary": "Update an event",
                "description": "Update event details (only by event owner)",
                "operationId": "e6433ea52ee4cced6791f22e370910e3",
                "parameters": [
                    {
                        "name": "event",
                        "in": "path",
                        "description": "Event UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "location_type": {
                                        "type": "string",
                                        "enum": [
                                            "physical",
                                            "virtual",
                                            "hybrid"
                                        ]
                                    },
                                    "location": {
                                        "type": "string",
                                        "maxLength": 500
                                    },
                                    "virtual_link": {
                                        "type": "string",
                                        "format": "url"
                                    },
                                    "capacity": {
                                        "type": "integer",
                                        "minimum": 1
                                    },
                                    "visibility": {
                                        "type": "string",
                                        "enum": [
                                            "public",
                                            "private"
                                        ]
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Event updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Event"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized to edit this event",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Events"
                ],
                "summary": "Delete an event",
                "description": "Delete event (only by event owner)",
                "operationId": "99fa0c7b87c9aad9f41cb1f60ef1d6ea",
                "parameters": [
                    {
                        "name": "event",
                        "in": "path",
                        "description": "Event UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Event deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized to delete this event",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/events/{event}/register": {
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Register academic user for an event",
                "description": "Registers the authenticated academic user for a specific event, enabling them to attend and participate in discussions. The registration process includes capacity checks, deadline validation, and automatic confirmation email sending. Users cannot register for their own events or events that have reached capacity.",
                "operationId": "registerForAcademicEvent",
                "parameters": [
                    {
                        "name": "event",
                        "in": "path",
                        "description": "Event UUID identifier",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Optional registration information",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "notes": {
                                        "description": "Optional notes or comments about your attendance",
                                        "type": "string",
                                        "maxLength": 1000,
                                        "example": "I'm particularly interested in the AI ethics sessions and would like to contribute to the panel discussion."
                                    },
                                    "dietary_requirements": {
                                        "description": "Special dietary requirements for catered events",
                                        "type": "string",
                                        "maxLength": 500,
                                        "example": "Vegetarian, no nuts"
                                    },
                                    "accessibility_needs": {
                                        "description": "Accessibility accommodations needed",
                                        "type": "string",
                                        "maxLength": 500,
                                        "example": "Wheelchair access required"
                                    },
                                    "emergency_contact": {
                                        "description": "Emergency contact information",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "example": "Jane Doe"
                                            },
                                            "phone": {
                                                "type": "string",
                                                "example": "+1-555-987-6543"
                                            },
                                            "relationship": {
                                                "type": "string",
                                                "example": "Colleague"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Registration successful - user is now registered for the event",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully registered for the event!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Registration failed due to business rules or constraints",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Event is not available for registration"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "User lacks permission to register for this event",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event not found or not available for registration",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Event not found or not available for registration"
                                        },
                                        "error_code": {
                                            "type": "string",
                                            "example": "EVENT_NOT_FOUND"
                                        },
                                        "possible_reasons": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "Event UUID does not exist",
                                                "Event has been cancelled",
                                                "Event is private and you're not invited",
                                                "Event has been deleted by organizer"
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - user is already registered for this event",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are already registered for this event"
                                        },
                                        "error_code": {
                                            "type": "string",
                                            "example": "ALREADY_REGISTERED"
                                        },
                                        "existing_registration": {
                                            "description": "Details of existing registration",
                                            "properties": {
                                                "registered_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-08-01T10:30:00Z"
                                                },
                                                "registration_number": {
                                                    "type": "string",
                                                    "example": "AI2025-0031"
                                                },
                                                "modify_registration": {
                                                    "type": "string",
                                                    "example": "/api/v1/events/550e8400-e29b-41d4-a716-446655440000/registration"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors in registration data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "notes": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "The notes may not be greater than 1000 characters."
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error during registration process",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Registration failed due to server error. Please try again."
                                        },
                                        "error_code": {
                                            "type": "string",
                                            "example": "REGISTRATION_ERROR"
                                        },
                                        "support_note": {
                                            "type": "string",
                                            "example": "If this error persists, please contact support@academiaworld.com"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/events/{event}/unregister": {
            "delete": {
                "tags": [
                    "Events"
                ],
                "summary": "Unregister from an event",
                "description": "Remove user registration from a specific event",
                "operationId": "735f5b268111b11ce4961c5a3ba4c80d",
                "parameters": [
                    {
                        "name": "event",
                        "in": "path",
                        "description": "Event UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Unregistration successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully unregistered from event"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Not registered for this event",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/my-events": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get user's hosted events",
                "description": "Retrieve all events hosted by the authenticated user",
                "operationId": "71bccf7ba4eefef30f053a39ecd809b9",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User events retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Event"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/my-registrations": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get user's event registrations",
                "description": "Retrieve all events the authenticated user has registered for",
                "operationId": "724843daf57b096461f15e6f0603daa7",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User registrations retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Event"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/my-cancelled-registrations": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get user's cancelled event registrations",
                "description": "Retrieve all events the authenticated user has cancelled registration for",
                "operationId": "d4fa099db92f2f667a178afa580be903",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User cancelled registrations retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "event": {
                                                        "$ref": "#/components/schemas/Event"
                                                    },
                                                    "registration_details": {
                                                        "properties": {
                                                            "status": {
                                                                "type": "string",
                                                                "example": "cancelled"
                                                            },
                                                            "registered_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            },
                                                            "cancelled_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            },
                                                            "notes": {
                                                                "type": "string",
                                                                "nullable": true
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/events/{event}/attendees": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get event attendees",
                "description": "Retrieve list of event attendees (only for event host)",
                "operationId": "f3da33879561813bbec0985c172c1fbd",
                "parameters": [
                    {
                        "name": "event",
                        "in": "path",
                        "description": "Event UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attendees retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "uuid": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "first_name": {
                                                        "type": "string"
                                                    },
                                                    "last_name": {
                                                        "type": "string"
                                                    },
                                                    "full_name": {
                                                        "type": "string"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "format": "email"
                                                    },
                                                    "institution": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "position": {
                                                        "type": "string",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "total_count": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized to view attendees",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/events/search": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Advanced event search",
                "description": "Search events with advanced filtering options",
                "operationId": "e0d23a5fa046eabe14c3eb12ae39863c",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search query for title, description, and tags",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter by event category",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Conference",
                                "Workshop",
                                "Seminar",
                                "Research",
                                "Networking"
                            ]
                        }
                    },
                    {
                        "name": "location_type",
                        "in": "query",
                        "description": "Filter by location type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "physical",
                                "virtual",
                                "hybrid"
                            ]
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Filter events starting from this date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "Filter events ending before this date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "Filter by specific tags (comma-separated)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "capacity_min",
                        "in": "query",
                        "description": "Minimum event capacity",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "capacity_max",
                        "in": "query",
                        "description": "Maximum event capacity",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "availability",
                        "in": "query",
                        "description": "Filter by availability",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "available",
                                "full",
                                "any"
                            ]
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort results by field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "date",
                                "popularity",
                                "capacity",
                                "created_at"
                            ]
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of results per page (max 50)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 50,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Event"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        },
                                        "facets": {
                                            "properties": {
                                                "total_count": {
                                                    "type": "integer"
                                                },
                                                "location_types": {
                                                    "type": "object"
                                                },
                                                "popular_tags": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/events/{event}/poster": {
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Upload event poster",
                "description": "Upload a poster for an event (host only)",
                "operationId": "5c7db63cd1ad1b4174a47f757245f5aa",
                "parameters": [
                    {
                        "name": "event",
                        "in": "path",
                        "description": "Event UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "poster": {
                                        "description": "Poster image file",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Poster uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "properties": {
                                                "poster_url": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Events"
                ],
                "summary": "Delete event poster",
                "description": "Remove the poster from an event (host only)",
                "operationId": "b2e4537b81a57277fc960a5fc149879a",
                "parameters": [
                    {
                        "name": "event",
                        "in": "path",
                        "description": "Event UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Poster deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized"
                    },
                    "404": {
                        "description": "No poster found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/events/{event}/forums": {
            "get": {
                "tags": [
                    "Forums"
                ],
                "summary": "Get event forums",
                "description": "Retrieve all active discussion forums for a specific event",
                "operationId": "98e8b262a404f0c4c7c4931d9cc64f59",
                "parameters": [
                    {
                        "name": "event",
                        "in": "path",
                        "description": "Event UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Forums retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Forums retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "uuid": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "general",
                                                            "q_and_a",
                                                            "networking",
                                                            "feedback",
                                                            "technical"
                                                        ]
                                                    },
                                                    "is_moderated": {
                                                        "type": "boolean"
                                                    },
                                                    "post_count": {
                                                        "type": "integer"
                                                    },
                                                    "participant_count": {
                                                        "type": "integer"
                                                    },
                                                    "last_activity_at": {
                                                        "type": "string",
                                                        "format": "datetime"
                                                    },
                                                    "creator": {
                                                        "properties": {
                                                            "uuid": {
                                                                "type": "string",
                                                                "format": "uuid"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object",
                                                        "nullable": true
                                                    },
                                                    "latest_post": {
                                                        "properties": {
                                                            "user": {
                                                                "type": "string"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "datetime"
                                                            }
                                                        },
                                                        "type": "object",
                                                        "nullable": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "datetime"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Forums"
                ],
                "summary": "Create a new forum",
                "description": "Create a new discussion forum for an event",
                "operationId": "51deae8232f07c26580eece3e918edea",
                "parameters": [
                    {
                        "name": "event",
                        "in": "path",
                        "description": "Event UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "type"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "general",
                                            "q_and_a",
                                            "networking",
                                            "feedback",
                                            "technical"
                                        ]
                                    },
                                    "is_moderated": {
                                        "type": "boolean",
                                        "default": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Forum created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Only event hosts can create forums"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/forums/{forum}": {
            "get": {
                "tags": [
                    "Forums"
                ],
                "summary": "Get a specific forum",
                "description": "Retrieves a specific forum by UUID with creator and event details",
                "operationId": "getForumByUuid",
                "parameters": [
                    {
                        "name": "forum",
                        "in": "path",
                        "description": "Forum UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Forum retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Forum retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "uuid": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "title": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "general",
                                                        "qa",
                                                        "academic",
                                                        "feedback"
                                                    ]
                                                },
                                                "is_active": {
                                                    "type": "boolean"
                                                },
                                                "creator": {
                                                    "properties": {
                                                        "uuid": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "event": {
                                                    "properties": {
                                                        "uuid": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                        },
                                                        "title": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Forum not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Forum not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Forums"
                ],
                "summary": "Update a forum",
                "description": "Updates a forum. Only event hosts and admins can update forums.",
                "operationId": "updateForum",
                "parameters": [
                    {
                        "name": "forum",
                        "in": "path",
                        "description": "Forum UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Updated Academic Discussion"
                                    },
                                    "description": {
                                        "type": "string",
                                        "maxLength": 1000,
                                        "example": "Updated discussion forum for event"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "is_moderated": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Forum updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Forum updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "uuid": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "title": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "type": "string"
                                                },
                                                "is_active": {
                                                    "type": "boolean"
                                                },
                                                "is_moderated": {
                                                    "type": "boolean"
                                                },
                                                "post_count": {
                                                    "type": "integer"
                                                },
                                                "participant_count": {
                                                    "type": "integer"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized to update forum",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to update this forum"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Forum not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Forum not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Forums"
                ],
                "summary": "Delete a forum",
                "description": "Soft deletes a forum (preserves data for audit purposes). Only event hosts and admins can delete forums.",
                "operationId": "deleteForum",
                "parameters": [
                    {
                        "name": "forum",
                        "in": "path",
                        "description": "Forum UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Forum deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Forum deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized to delete forum",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to delete this forum"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Forum not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Forum not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/forums/{forum}/posts": {
            "get": {
                "tags": [
                    "Forum Posts"
                ],
                "summary": "Get all posts in a forum",
                "description": "Retrieves all top-level posts in a forum with replies and pagination",
                "operationId": "getForumPosts",
                "parameters": [
                    {
                        "name": "forum",
                        "in": "path",
                        "description": "Forum UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Posts retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Posts retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "uuid": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "content": {
                                                        "type": "string"
                                                    },
                                                    "likes_count": {
                                                        "type": "integer"
                                                    },
                                                    "replies_count": {
                                                        "type": "integer"
                                                    },
                                                    "edited_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "nullable": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "user": {
                                                        "properties": {
                                                            "uuid": {
                                                                "type": "string",
                                                                "format": "uuid"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object",
                                                        "nullable": true
                                                    },
                                                    "replies": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "uuid": {
                                                                    "type": "string",
                                                                    "format": "uuid"
                                                                },
                                                                "content": {
                                                                    "type": "string"
                                                                },
                                                                "created_at": {
                                                                    "type": "string",
                                                                    "format": "date-time"
                                                                },
                                                                "user": {
                                                                    "properties": {
                                                                        "uuid": {
                                                                            "type": "string",
                                                                            "format": "uuid"
                                                                        },
                                                                        "name": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object",
                                                                    "nullable": true
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Forum not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Forum not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Forum Posts"
                ],
                "summary": "Create a new post in a forum",
                "description": "Creates a new post or reply in a forum",
                "operationId": "createForumPost",
                "parameters": [
                    {
                        "name": "forum",
                        "in": "path",
                        "description": "Forum UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "content"
                                ],
                                "properties": {
                                    "content": {
                                        "type": "string",
                                        "maxLength": 10000,
                                        "minLength": 1,
                                        "example": "This is my post content"
                                    },
                                    "parent_uuid": {
                                        "description": "UUID of parent post for replies",
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "550e8400-e29b-41d4-a716-446655440000",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Post created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Post created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "uuid": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "content": {
                                                    "type": "string"
                                                },
                                                "is_pinned": {
                                                    "type": "boolean"
                                                },
                                                "is_solution": {
                                                    "type": "boolean"
                                                },
                                                "likes_count": {
                                                    "type": "integer"
                                                },
                                                "replies_count": {
                                                    "type": "integer"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized to post in forum",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to post in this forum"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or invalid parent post",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid parent post"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/posts/{post}": {
            "get": {
                "tags": [
                    "Forum Posts"
                ],
                "summary": "Get a specific post with its replies",
                "description": "Retrieves a specific forum post with all its replies and metadata",
                "operationId": "getForumPost",
                "parameters": [
                    {
                        "name": "post",
                        "in": "path",
                        "description": "Post UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Post retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "uuid": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "content": {
                                                    "type": "string"
                                                },
                                                "is_pinned": {
                                                    "type": "boolean"
                                                },
                                                "is_solution": {
                                                    "type": "boolean"
                                                },
                                                "likes_count": {
                                                    "type": "integer"
                                                },
                                                "replies_count": {
                                                    "type": "integer"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "uuid": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "forum": {
                                                    "properties": {
                                                        "uuid": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                        },
                                                        "title": {
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "replies": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "uuid": {
                                                                "type": "string",
                                                                "format": "uuid"
                                                            },
                                                            "content": {
                                                                "type": "string"
                                                            },
                                                            "user": {
                                                                "properties": {
                                                                    "uuid": {
                                                                        "type": "string",
                                                                        "format": "uuid"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Post not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Forum Posts"
                ],
                "summary": "Update a post",
                "description": "Updates a forum post. Only the post author can edit their posts.",
                "operationId": "updateForumPost",
                "parameters": [
                    {
                        "name": "post",
                        "in": "path",
                        "description": "Post UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "content"
                                ],
                                "properties": {
                                    "content": {
                                        "type": "string",
                                        "maxLength": 10000,
                                        "minLength": 1,
                                        "example": "Updated post content"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Post updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Post updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "uuid": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "content": {
                                                    "type": "string"
                                                },
                                                "edited_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized to edit post",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to edit this post"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Forum Posts"
                ],
                "summary": "Delete a post",
                "description": "Deletes a forum post. Only post author, forum host, or admin can delete posts.",
                "operationId": "deletePost",
                "parameters": [
                    {
                        "name": "post",
                        "in": "path",
                        "description": "Post UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Post deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized to delete post",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to delete this post"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Post not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/posts/{post}/like": {
            "post": {
                "tags": [
                    "Forum Posts"
                ],
                "summary": "Toggle like on a post",
                "description": "Like or unlike a forum post",
                "operationId": "toggleLikeForumPost",
                "parameters": [
                    {
                        "name": "post",
                        "in": "path",
                        "description": "Post UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post liked/unliked successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Post liked"
                                        },
                                        "data": {
                                            "properties": {
                                                "liked": {
                                                    "type": "boolean"
                                                },
                                                "likes_count": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Post not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/posts/{post}/pin": {
            "post": {
                "tags": [
                    "Forum Posts"
                ],
                "summary": "Pin/unpin a post",
                "description": "Pin or unpin a forum post. Only event hosts and admins can pin posts.",
                "operationId": "togglePinForumPost",
                "parameters": [
                    {
                        "name": "post",
                        "in": "path",
                        "description": "Post UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post pinned/unpinned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Post pinned"
                                        },
                                        "data": {
                                            "properties": {
                                                "is_pinned": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized to pin posts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to pin posts"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Post not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/posts/{post}/solution": {
            "post": {
                "tags": [
                    "Forum Posts"
                ],
                "summary": "Mark post as solution",
                "description": "Mark a post as the solution in Q&A forums. Only post author, event host, or admin can mark solutions.",
                "operationId": "markPostAsSolution",
                "parameters": [
                    {
                        "name": "post",
                        "in": "path",
                        "description": "Post UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post marked as solution successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Post marked as solution"
                                        },
                                        "data": {
                                            "properties": {
                                                "is_solution": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized to mark as solution",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to mark this as a solution"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Not a Q&A forum",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Solutions can only be marked in Q&A forums"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Post not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/events/{event}/resources": {
            "get": {
                "tags": [
                    "Resources"
                ],
                "summary": "Retrieve academic resources for a specific event",
                "description": "Fetches all academic resources (presentations, papers, recordings, datasets, etc.) associated with an event. Access control ensures users only see resources they're permitted to view based on their registration status and the resource's visibility settings. Resources include presentations, research papers, recordings, datasets, and other academic materials.",
                "operationId": "getEventResources",
                "parameters": [
                    {
                        "name": "event",
                        "in": "path",
                        "description": "Event UUID identifier",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter resources by academic resource type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "presentation",
                                "paper",
                                "recording",
                                "agenda",
                                "poster",
                                "handout",
                                "dataset",
                                "code",
                                "other"
                            ],
                            "example": "presentation"
                        }
                    },
                    {
                        "name": "public_only",
                        "in": "query",
                        "description": "Show only publicly accessible resources (no authentication required)",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false,
                            "example": true
                        }
                    },
                    {
                        "name": "downloadable_only",
                        "in": "query",
                        "description": "Filter to show only downloadable resources",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false,
                            "example": false
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search in resource titles and descriptions",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 255,
                            "example": "machine learning slides"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort resources by field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "created_at",
                            "enum": [
                                "created_at",
                                "title",
                                "download_count",
                                "view_count",
                                "file_size"
                            ],
                            "example": "download_count"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort order direction",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "desc",
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "example": "desc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event resources retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Event resources retrieved successfully"
                                        },
                                        "data": {
                                            "description": "Array of accessible event resources",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "uuid": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "original_filename": {
                                                        "type": "string"
                                                    },
                                                    "file_type": {
                                                        "type": "string"
                                                    },
                                                    "file_size": {
                                                        "type": "integer"
                                                    },
                                                    "file_size_formatted": {
                                                        "type": "string"
                                                    },
                                                    "file_url": {
                                                        "type": "string"
                                                    },
                                                    "resource_type": {
                                                        "type": "string"
                                                    },
                                                    "is_public": {
                                                        "type": "boolean"
                                                    },
                                                    "is_downloadable": {
                                                        "type": "boolean"
                                                    },
                                                    "download_count": {
                                                        "type": "integer"
                                                    },
                                                    "view_count": {
                                                        "type": "integer"
                                                    },
                                                    "uploaded_by": {
                                                        "type": "object",
                                                        "nullable": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied - insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Resources"
                ],
                "summary": "Upload event resource",
                "description": "Upload a new resource for an event (host only)",
                "operationId": "50e2eb4a82b4cdb477bdf9a5bcb2a920",
                "parameters": [
                    {
                        "name": "event",
                        "in": "path",
                        "description": "Event UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "description": "Resource file",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "title": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "resource_type": {
                                        "type": "string",
                                        "enum": [
                                            "presentation",
                                            "paper",
                                            "recording",
                                            "agenda",
                                            "other"
                                        ]
                                    },
                                    "is_public": {
                                        "type": "boolean"
                                    },
                                    "is_downloadable": {
                                        "type": "boolean"
                                    },
                                    "requires_registration": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Resource uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/EventResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized to upload resources"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/resources/{resource}": {
            "get": {
                "tags": [
                    "Resources"
                ],
                "summary": "Get resource details",
                "description": "Retrieve detailed information about a specific resource",
                "operationId": "07d276b99ec854380fcae26c22ad23c7",
                "parameters": [
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/EventResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "403": {
                        "description": "Access denied"
                    }
                }
            },
            "put": {
                "tags": [
                    "Resources"
                ],
                "summary": "Update resource details",
                "description": "Update resource metadata (host/admin only)",
                "operationId": "1fc5e05332fbe319256a94482c7be4f4",
                "parameters": [
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "resource_type": {
                                        "type": "string",
                                        "enum": [
                                            "presentation",
                                            "paper",
                                            "recording",
                                            "agenda",
                                            "other"
                                        ]
                                    },
                                    "is_public": {
                                        "type": "boolean"
                                    },
                                    "is_downloadable": {
                                        "type": "boolean"
                                    },
                                    "requires_registration": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Resource updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/EventResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Resources"
                ],
                "summary": "Delete resource",
                "description": "Delete a resource and its file (host/admin only)",
                "operationId": "96987a030f4a111ff5ddda60a1b6aa61",
                "parameters": [
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/resources/{resource}/download": {
            "get": {
                "tags": [
                    "Resources"
                ],
                "summary": "Download resource file",
                "description": "Download a resource file if permitted",
                "operationId": "a3ded72a1fd1aff4bcbd3dbb73d474cf",
                "parameters": [
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File download",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Download not permitted"
                    },
                    "404": {
                        "description": "Resource or file not found"
                    }
                }
            }
        },
        "/api/v1/connections": {
            "get": {
                "tags": [
                    "User Connections"
                ],
                "summary": "Get user's connections",
                "description": "Retrieves all accepted connections for the authenticated user",
                "operationId": "getUserConnections",
                "responses": {
                    "200": {
                        "description": "Connections retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Connections retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "user": {
                                                        "properties": {
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Dr. Jane Smith"
                                                            },
                                                            "institution": {
                                                                "type": "string",
                                                                "example": "MIT"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "connected_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User Connections"
                ],
                "summary": "Send a connection request",
                "description": "Send a connection request to another user",
                "operationId": "sendConnectionRequest",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_uuid"
                                ],
                                "properties": {
                                    "user_uuid": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "550e8400-e29b-41d4-a716-446655440000"
                                    },
                                    "message": {
                                        "type": "string",
                                        "maxLength": 500,
                                        "example": "I'd like to connect with you"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Connection request sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Connection request sent successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "uuid": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "status": {
                                                    "type": "string"
                                                },
                                                "sent_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Cannot connect to yourself",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You cannot connect to yourself"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Connection already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Connection already exists"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/connections/pending": {
            "get": {
                "tags": [
                    "User Connections"
                ],
                "summary": "Get pending connection requests",
                "description": "Retrieves all pending connection requests for the authenticated user",
                "operationId": "getPendingConnections",
                "responses": {
                    "200": {
                        "description": "Pending requests retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Pending requests retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "uuid": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "requester": {
                                                        "properties": {
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "institution": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "sent_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/connections/{connection}/respond": {
            "put": {
                "tags": [
                    "User Connections"
                ],
                "summary": "Respond to a connection request",
                "description": "Accept or decline a connection request",
                "operationId": "respondToConnectionRequest",
                "parameters": [
                    {
                        "name": "connection",
                        "in": "path",
                        "description": "Connection UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "action"
                                ],
                                "properties": {
                                    "action": {
                                        "type": "string",
                                        "enum": [
                                            "accept",
                                            "decline",
                                            "block"
                                        ],
                                        "example": "accept"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Connection request responded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Connection request accepted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized to respond",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to respond to this request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid status or request already responded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This request has already been responded to"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/connections/{connection}": {
            "delete": {
                "tags": [
                    "User Connections"
                ],
                "summary": "Remove a connection",
                "description": "Delete an existing user connection",
                "operationId": "removeConnection",
                "parameters": [
                    {
                        "name": "connection",
                        "in": "path",
                        "description": "Connection UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Connection removed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Connection removed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized to remove connection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to remove this connection"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Connection not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Connection not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/users/search": {
            "get": {
                "tags": [
                    "User Connections"
                ],
                "summary": "Search for users to connect with",
                "description": "Search for users by name, institution, or department to send connection requests",
                "operationId": "searchUsersToConnect",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Search query (name or other fields)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "minLength": 2
                        }
                    },
                    {
                        "name": "institution",
                        "in": "query",
                        "description": "Filter by institution",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "department",
                        "in": "query",
                        "description": "Filter by department",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Users found"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "uuid": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "institution": {
                                                        "type": "string"
                                                    },
                                                    "department": {
                                                        "type": "string"
                                                    },
                                                    "connection_status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "none",
                                                            "pending",
                                                            "accepted",
                                                            "declined"
                                                        ]
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/profile": {
            "get": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Get current user profile",
                "description": "Retrieve the authenticated user's profile information",
                "operationId": "getUserProfile",
                "responses": {
                    "200": {
                        "description": "Profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "uuid": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "first_name": {
                                                    "type": "string"
                                                },
                                                "last_name": {
                                                    "type": "string"
                                                },
                                                "full_name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "institution": {
                                                    "type": "string"
                                                },
                                                "department": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "position": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "bio": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "website": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "avatar": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "social_links": {
                                                    "type": "object",
                                                    "nullable": true
                                                },
                                                "account_status": {
                                                    "type": "string"
                                                },
                                                "is_admin": {
                                                    "type": "boolean"
                                                },
                                                "hosted_events_count": {
                                                    "type": "integer"
                                                },
                                                "registered_events_count": {
                                                    "type": "integer"
                                                },
                                                "email_verified_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "nullable": true
                                                },
                                                "last_login_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Update user profile",
                "description": "Update the authenticated user's profile information",
                "operationId": "updateUserProfile",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "institution": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "department": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "position": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "bio": {
                                        "type": "string",
                                        "maxLength": 1000
                                    },
                                    "website": {
                                        "type": "string",
                                        "format": "url"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "maxLength": 20
                                    },
                                    "social_links": {
                                        "properties": {
                                            "twitter": {
                                                "type": "string"
                                            },
                                            "linkedin": {
                                                "type": "string"
                                            },
                                            "orcid": {
                                                "type": "string"
                                            },
                                            "researchgate": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/profile/avatar": {
            "post": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Upload user avatar",
                "description": "Upload and update the authenticated user's avatar image",
                "operationId": "updateUserAvatar",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "avatar": {
                                        "description": "Avatar image file (JPEG, PNG, JPG, GIF, max 2MB)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Avatar updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Avatar updated successfully"
                                        },
                                        "avatar_url": {
                                            "type": "string",
                                            "example": "https://example.com/storage/avatars/user123.jpg"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Delete user avatar",
                "description": "Delete the authenticated user's avatar image",
                "operationId": "deleteUserAvatar",
                "responses": {
                    "200": {
                        "description": "Avatar deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Avatar deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No avatar to delete"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/profile/stats": {
            "get": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Get user statistics",
                "description": "Get detailed statistics for the authenticated user",
                "operationId": "getUserStats",
                "responses": {
                    "200": {
                        "description": "Statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Statistics retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "hosted_events_total": {
                                                    "type": "integer"
                                                },
                                                "hosted_events_upcoming": {
                                                    "type": "integer"
                                                },
                                                "hosted_events_completed": {
                                                    "type": "integer"
                                                },
                                                "registered_events_total": {
                                                    "type": "integer"
                                                },
                                                "registered_events_upcoming": {
                                                    "type": "integer"
                                                },
                                                "total_attendees_hosted": {
                                                    "type": "integer"
                                                },
                                                "profile_completion": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "title": "Academic User",
                "description": "Represents an academic user profile with institutional affiliations and academic credentials",
                "required": [
                    "uuid",
                    "first_name",
                    "last_name",
                    "email",
                    "institution",
                    "account_status",
                    "is_admin",
                    "created_at"
                ],
                "properties": {
                    "uuid": {
                        "description": "Unique identifier for the user",
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "first_name": {
                        "description": "User's first name",
                        "type": "string",
                        "maxLength": 255,
                        "example": "John"
                    },
                    "last_name": {
                        "description": "User's last name",
                        "type": "string",
                        "maxLength": 255,
                        "example": "Doe"
                    },
                    "email": {
                        "description": "User's email address (must be unique)",
                        "type": "string",
                        "format": "email",
                        "maxLength": 255,
                        "example": "john.doe@university.edu"
                    },
                    "institution": {
                        "description": "Academic institution affiliation",
                        "type": "string",
                        "maxLength": 255,
                        "example": "University of Technology"
                    },
                    "department": {
                        "description": "Department within the institution",
                        "type": "string",
                        "maxLength": 255,
                        "example": "Computer Science",
                        "nullable": true
                    },
                    "position": {
                        "description": "Academic position or title",
                        "type": "string",
                        "maxLength": 255,
                        "example": "Professor",
                        "nullable": true
                    },
                    "bio": {
                        "description": "User's biography or research interests",
                        "type": "string",
                        "maxLength": 1000,
                        "example": "Research interests include AI, machine learning, and academic collaboration platforms.",
                        "nullable": true
                    },
                    "website": {
                        "description": "Personal or professional website",
                        "type": "string",
                        "format": "url",
                        "maxLength": 255,
                        "example": "https://johndoe.university.edu",
                        "nullable": true
                    },
                    "phone": {
                        "description": "Contact phone number",
                        "type": "string",
                        "maxLength": 20,
                        "example": "+1-555-123-4567",
                        "nullable": true
                    },
                    "avatar": {
                        "description": "URL to user's profile picture",
                        "type": "string",
                        "format": "url",
                        "example": "https://api.academiaworld.com/storage/avatars/user-123.jpg",
                        "nullable": true
                    },
                    "social_links": {
                        "description": "Social media and professional network links",
                        "properties": {
                            "linkedin": {
                                "type": "string",
                                "format": "url",
                                "example": "https://linkedin.com/in/johndoe"
                            },
                            "twitter": {
                                "type": "string",
                                "format": "url",
                                "example": "https://twitter.com/johndoe"
                            },
                            "orcid": {
                                "type": "string",
                                "example": "0000-0000-0000-0000"
                            },
                            "google_scholar": {
                                "type": "string",
                                "format": "url",
                                "example": "https://scholar.google.com/citations?user=abc123"
                            },
                            "researchgate": {
                                "type": "string",
                                "format": "url",
                                "example": "https://researchgate.net/profile/John_Doe"
                            }
                        },
                        "type": "object",
                        "nullable": true
                    },
                    "account_status": {
                        "description": "Current status of the user account",
                        "type": "string",
                        "enum": [
                            "pending",
                            "active",
                            "suspended"
                        ],
                        "example": "active"
                    },
                    "is_admin": {
                        "description": "Whether the user has administrative privileges",
                        "type": "boolean",
                        "example": false
                    },
                    "email_verified_at": {
                        "description": "When the email was verified",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-01-15T10:30:00Z",
                        "nullable": true
                    },
                    "last_login_at": {
                        "description": "Last login timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-06T09:15:00Z",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Account creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-01-15T10:30:00Z"
                    },
                    "updated_at": {
                        "description": "Last profile update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-06T09:15:00Z"
                    }
                },
                "type": "object"
            },
            "Event": {
                "title": "Academic Event",
                "description": "Represents an academic event such as a conference, workshop, seminar, or research presentation",
                "required": [
                    "uuid",
                    "title",
                    "description",
                    "start_date",
                    "end_date",
                    "location_type",
                    "status",
                    "visibility",
                    "host",
                    "created_at"
                ],
                "properties": {
                    "uuid": {
                        "description": "Unique identifier for the event",
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "title": {
                        "description": "Event title",
                        "type": "string",
                        "maxLength": 255,
                        "example": "AI in Academic Research Conference 2025"
                    },
                    "description": {
                        "description": "Detailed event description",
                        "type": "string",
                        "example": "Annual conference exploring the latest developments in artificial intelligence applications within academic research. Join leading researchers, practitioners, and students for presentations, workshops, and networking opportunities."
                    },
                    "start_date": {
                        "description": "Event start date and time",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-15T09:00:00Z"
                    },
                    "end_date": {
                        "description": "Event end date and time",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-17T17:00:00Z"
                    },
                    "timezone": {
                        "description": "Event timezone",
                        "type": "string",
                        "maxLength": 50,
                        "example": "UTC",
                        "nullable": true
                    },
                    "location_type": {
                        "description": "Type of event location: physical (in-person), virtual (online), or hybrid (both)",
                        "type": "string",
                        "enum": [
                            "physical",
                            "virtual",
                            "hybrid"
                        ],
                        "example": "hybrid"
                    },
                    "location": {
                        "description": "Physical location address (required for physical and hybrid events)",
                        "type": "string",
                        "maxLength": 500,
                        "example": "University Conference Center, 123 Academic Way, Tech City, TC 12345",
                        "nullable": true
                    },
                    "virtual_link": {
                        "description": "Virtual meeting link (required for virtual and hybrid events)",
                        "type": "string",
                        "format": "url",
                        "example": "https://zoom.us/j/123456789?pwd=abcdef",
                        "nullable": true
                    },
                    "meeting_link": {
                        "description": "Alternative meeting link field",
                        "type": "string",
                        "format": "url",
                        "example": "https://zoom.us/j/123456789?pwd=abcdef",
                        "nullable": true
                    },
                    "capacity": {
                        "description": "Maximum number of attendees (null for unlimited)",
                        "type": "integer",
                        "maximum": 50000,
                        "minimum": 1,
                        "example": 200,
                        "nullable": true
                    },
                    "available_spots": {
                        "description": "Number of available registration spots remaining",
                        "type": "integer",
                        "minimum": 0,
                        "example": 150
                    },
                    "is_full": {
                        "description": "Whether the event has reached capacity",
                        "type": "boolean",
                        "example": false
                    },
                    "visibility": {
                        "description": "Event visibility: public (discoverable by all users) or private (invitation only)",
                        "type": "string",
                        "enum": [
                            "public",
                            "private"
                        ],
                        "example": "public"
                    },
                    "status": {
                        "description": "Event status: draft (not visible), published (active), cancelled, completed, or banned (by admin)",
                        "type": "string",
                        "enum": [
                            "draft",
                            "published",
                            "cancelled",
                            "completed",
                            "banned"
                        ],
                        "example": "published"
                    },
                    "tags": {
                        "description": "Tags for categorizing and searching events",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "maxLength": 50
                        },
                        "example": [
                            "AI",
                            "Machine Learning",
                            "Research",
                            "Conference",
                            "Networking"
                        ]
                    },
                    "poster": {
                        "description": "URL to event poster image",
                        "type": "string",
                        "format": "url",
                        "example": "https://api.academiaworld.com/storage/posters/event-123.jpg",
                        "nullable": true
                    },
                    "agenda": {
                        "description": "Event agenda or schedule",
                        "type": "string",
                        "example": "9:00 AM - Registration\\n10:00 AM - Keynote\\n11:30 AM - Panel Discussion",
                        "nullable": true
                    },
                    "requirements": {
                        "description": "Prerequisites or requirements for attendees",
                        "type": "string",
                        "maxLength": 1000,
                        "example": "Participants should have basic knowledge of machine learning concepts. Laptops required for hands-on sessions.",
                        "nullable": true
                    },
                    "registration_deadline": {
                        "description": "Last date for registration",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-10T23:59:59Z",
                        "nullable": true
                    },
                    "host": {
                        "$ref": "#/components/schemas/User"
                    },
                    "registrations_count": {
                        "description": "Total number of registered attendees",
                        "type": "integer",
                        "example": 50
                    },
                    "resources_count": {
                        "description": "Number of associated resources (presentations, papers, etc.)",
                        "type": "integer",
                        "example": 5
                    },
                    "forums_count": {
                        "description": "Number of discussion forums for this event",
                        "type": "integer",
                        "example": 3
                    },
                    "user_registered": {
                        "description": "Whether the current user is registered for this event (only present for authenticated requests)",
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "description": "Event creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-07-15T14:30:00Z"
                    },
                    "updated_at": {
                        "description": "Last event update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-06T09:15:00Z"
                    },
                    "moderated_at": {
                        "description": "When the event was reviewed by moderators",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-07-16T10:00:00Z",
                        "nullable": true
                    },
                    "banned_at": {
                        "description": "When the event was banned (if applicable)",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "ban_reason": {
                        "description": "Reason for banning the event (if applicable)",
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PaginationMeta": {
                "title": "Pagination Metadata",
                "description": "Standard pagination information for paginated responses",
                "required": [
                    "current_page",
                    "last_page",
                    "per_page",
                    "total"
                ],
                "properties": {
                    "current_page": {
                        "description": "Current page number",
                        "type": "integer",
                        "minimum": 1,
                        "example": 1
                    },
                    "last_page": {
                        "description": "Last available page number",
                        "type": "integer",
                        "minimum": 1,
                        "example": 5
                    },
                    "per_page": {
                        "description": "Number of items per page",
                        "type": "integer",
                        "maximum": 100,
                        "minimum": 1,
                        "example": 15
                    },
                    "total": {
                        "description": "Total number of items across all pages",
                        "type": "integer",
                        "minimum": 0,
                        "example": 75
                    },
                    "from": {
                        "description": "First item number on current page",
                        "type": "integer",
                        "minimum": 1,
                        "example": 1,
                        "nullable": true
                    },
                    "to": {
                        "description": "Last item number on current page",
                        "type": "integer",
                        "minimum": 1,
                        "example": 15,
                        "nullable": true
                    },
                    "has_more_pages": {
                        "description": "Whether there are more pages available",
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "ErrorResponse": {
                "title": "Error Response",
                "description": "Standard error response format used across all endpoints",
                "required": [
                    "message"
                ],
                "properties": {
                    "message": {
                        "description": "Human-readable error message",
                        "type": "string",
                        "example": "The given data was invalid."
                    },
                    "errors": {
                        "description": "Detailed validation errors (only present for 422 validation errors)",
                        "properties": {
                            "email": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "The email has already been taken."
                                }
                            },
                            "start_date": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "The start date must be a date after today."
                                }
                            }
                        },
                        "type": "object",
                        "nullable": true
                    },
                    "error_code": {
                        "description": "Machine-readable error code",
                        "type": "string",
                        "example": "VALIDATION_FAILED",
                        "nullable": true
                    },
                    "debug_info": {
                        "description": "Additional debug information (only in development mode)",
                        "type": "object",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SuccessResponse": {
                "title": "Success Response",
                "description": "Standard success response format",
                "required": [
                    "message"
                ],
                "properties": {
                    "message": {
                        "description": "Success message",
                        "type": "string",
                        "example": "Operation completed successfully."
                    },
                    "data": {
                        "description": "Response data (varies by endpoint)",
                        "type": "object",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "UserConnection": {
                "title": "User Connection",
                "description": "Represents a professional connection between two academic users",
                "required": [
                    "uuid",
                    "requester",
                    "requested",
                    "status",
                    "created_at"
                ],
                "properties": {
                    "uuid": {
                        "description": "Unique identifier for the connection",
                        "type": "string",
                        "format": "uuid",
                        "example": "aa0j3800-e29b-41d4-a716-446655440005"
                    },
                    "requester": {
                        "$ref": "#/components/schemas/User"
                    },
                    "requested": {
                        "$ref": "#/components/schemas/User"
                    },
                    "status": {
                        "description": "Connection status",
                        "type": "string",
                        "enum": [
                            "pending",
                            "accepted",
                            "declined",
                            "blocked"
                        ],
                        "example": "accepted"
                    },
                    "message": {
                        "description": "Optional message from requester",
                        "type": "string",
                        "maxLength": 500,
                        "example": "I'd like to connect to discuss our mutual research interests in AI ethics.",
                        "nullable": true
                    },
                    "connected_at": {
                        "description": "When the connection was accepted",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-02T10:30:00Z",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "When the connection request was created",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-01T15:00:00Z"
                    },
                    "updated_at": {
                        "description": "Last connection update",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-02T10:30:00Z"
                    }
                },
                "type": "object"
            },
            "UserStats": {
                "title": "User Statistics",
                "description": "Comprehensive statistics for a user's platform activity",
                "required": [
                    "hosted_events_total",
                    "registered_events_total",
                    "profile_completion"
                ],
                "properties": {
                    "hosted_events_total": {
                        "description": "Total number of events hosted by the user",
                        "type": "integer",
                        "minimum": 0,
                        "example": 12
                    },
                    "hosted_events_upcoming": {
                        "description": "Number of upcoming hosted events",
                        "type": "integer",
                        "minimum": 0,
                        "example": 3
                    },
                    "hosted_events_completed": {
                        "description": "Number of completed hosted events",
                        "type": "integer",
                        "minimum": 0,
                        "example": 9
                    },
                    "registered_events_total": {
                        "description": "Total number of events user has registered for",
                        "type": "integer",
                        "minimum": 0,
                        "example": 28
                    },
                    "registered_events_upcoming": {
                        "description": "Number of upcoming registered events",
                        "type": "integer",
                        "minimum": 0,
                        "example": 5
                    },
                    "total_attendees_hosted": {
                        "description": "Total attendees across all hosted events",
                        "type": "integer",
                        "minimum": 0,
                        "example": 450
                    },
                    "connections_count": {
                        "description": "Number of professional connections",
                        "type": "integer",
                        "minimum": 0,
                        "example": 67
                    },
                    "forum_posts_count": {
                        "description": "Number of forum posts made",
                        "type": "integer",
                        "minimum": 0,
                        "example": 23
                    },
                    "resources_uploaded": {
                        "description": "Number of resources uploaded",
                        "type": "integer",
                        "minimum": 0,
                        "example": 15
                    },
                    "resources_downloads": {
                        "description": "Total downloads of user's resources",
                        "type": "integer",
                        "minimum": 0,
                        "example": 1245
                    },
                    "profile_completion": {
                        "description": "Profile completion percentage",
                        "type": "integer",
                        "maximum": 100,
                        "minimum": 0,
                        "example": 85
                    },
                    "reputation_score": {
                        "description": "User reputation score based on activity and contributions",
                        "type": "integer",
                        "minimum": 0,
                        "example": 340
                    }
                },
                "type": "object"
            },
            "EventRegistration": {
                "title": "Event Registration",
                "description": "Represents a user's registration for an academic event",
                "required": [
                    "uuid",
                    "event",
                    "status",
                    "registered_at"
                ],
                "properties": {
                    "uuid": {
                        "description": "Unique identifier for the registration",
                        "type": "string",
                        "format": "uuid",
                        "example": "660f9400-e29b-41d4-a716-446655440001"
                    },
                    "event": {
                        "$ref": "#/components/schemas/Event"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "status": {
                        "description": "Registration status",
                        "type": "string",
                        "enum": [
                            "registered",
                            "cancelled",
                            "waitlisted"
                        ],
                        "example": "registered"
                    },
                    "notes": {
                        "description": "Optional notes from the registrant",
                        "type": "string",
                        "maxLength": 1000,
                        "example": "Looking forward to the AI sessions!",
                        "nullable": true
                    },
                    "registered_at": {
                        "description": "When the registration was completed",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-01T15:30:00Z"
                    },
                    "cancelled_at": {
                        "description": "When the registration was cancelled (if applicable)",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Registration record creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-01T15:30:00Z"
                    },
                    "updated_at": {
                        "description": "Last registration update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-01T15:30:00Z"
                    }
                },
                "type": "object"
            },
            "EventResource": {
                "title": "Event Resource",
                "description": "Represents an academic resource (file, document, presentation) associated with an event",
                "required": [
                    "uuid",
                    "title",
                    "original_filename",
                    "file_type",
                    "file_size",
                    "resource_type",
                    "is_public",
                    "is_downloadable",
                    "created_at"
                ],
                "properties": {
                    "uuid": {
                        "description": "Unique identifier for the resource",
                        "type": "string",
                        "format": "uuid",
                        "example": "770g0500-e29b-41d4-a716-446655440002"
                    },
                    "title": {
                        "description": "Resource title",
                        "type": "string",
                        "maxLength": 255,
                        "example": "Conference Keynote: AI Ethics in Research"
                    },
                    "description": {
                        "description": "Detailed resource description",
                        "type": "string",
                        "maxLength": 1000,
                        "example": "Keynote presentation exploring ethical considerations in AI research methodologies.",
                        "nullable": true
                    },
                    "original_filename": {
                        "description": "Original name of the uploaded file",
                        "type": "string",
                        "example": "AI_Ethics_Keynote_2025.pdf"
                    },
                    "file_type": {
                        "description": "File extension/type",
                        "type": "string",
                        "example": "pdf"
                    },
                    "mime_type": {
                        "description": "MIME type of the file",
                        "type": "string",
                        "example": "application/pdf"
                    },
                    "file_size": {
                        "description": "File size in bytes",
                        "type": "integer",
                        "example": 2048576
                    },
                    "file_size_formatted": {
                        "description": "Human-readable file size",
                        "type": "string",
                        "example": "2.0 MB"
                    },
                    "file_url": {
                        "description": "Public URL to access the resource",
                        "type": "string",
                        "format": "url",
                        "example": "https://api.academiaworld.com/storage/resources/ai-ethics-keynote.pdf"
                    },
                    "resource_type": {
                        "description": "Category of the resource",
                        "type": "string",
                        "enum": [
                            "presentation",
                            "paper",
                            "recording",
                            "agenda",
                            "poster",
                            "handout",
                            "dataset",
                            "code",
                            "other"
                        ],
                        "example": "presentation"
                    },
                    "is_public": {
                        "description": "Whether the resource is publicly accessible",
                        "type": "boolean",
                        "example": true
                    },
                    "is_downloadable": {
                        "description": "Whether users can download the resource",
                        "type": "boolean",
                        "example": true
                    },
                    "requires_registration": {
                        "description": "Whether access requires event registration",
                        "type": "boolean",
                        "example": false
                    },
                    "download_count": {
                        "description": "Number of times the resource has been downloaded",
                        "type": "integer",
                        "example": 156
                    },
                    "view_count": {
                        "description": "Number of times the resource has been viewed",
                        "type": "integer",
                        "example": 342
                    },
                    "status": {
                        "description": "Resource status",
                        "type": "string",
                        "enum": [
                            "active",
                            "archived",
                            "deleted"
                        ],
                        "example": "active"
                    },
                    "event": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Event"
                            }
                        ],
                        "nullable": true,
                        "description": "Associated event (when included in response)"
                    },
                    "uploaded_by": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/User"
                            }
                        ],
                        "nullable": true,
                        "description": "User who uploaded the resource"
                    },
                    "created_at": {
                        "description": "Resource upload timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-01T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "Last resource update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-01T10:00:00Z"
                    }
                },
                "type": "object"
            },
            "DiscussionForum": {
                "title": "Discussion Forum",
                "description": "Represents a discussion forum associated with an academic event",
                "required": [
                    "uuid",
                    "title",
                    "type",
                    "is_active",
                    "is_moderated",
                    "post_count",
                    "participant_count",
                    "created_at"
                ],
                "properties": {
                    "uuid": {
                        "description": "Unique identifier for the forum",
                        "type": "string",
                        "format": "uuid",
                        "example": "880h1600-e29b-41d4-a716-446655440003"
                    },
                    "title": {
                        "description": "Forum title",
                        "type": "string",
                        "maxLength": 255,
                        "example": "AI Research Methodology Discussion"
                    },
                    "description": {
                        "description": "Forum description",
                        "type": "string",
                        "maxLength": 1000,
                        "example": "Discuss research methodologies, share insights, and ask questions about AI research approaches.",
                        "nullable": true
                    },
                    "type": {
                        "description": "Forum category: general discussion, Q&A, networking, feedback collection, technical support, or academic discourse",
                        "type": "string",
                        "enum": [
                            "general",
                            "q_and_a",
                            "networking",
                            "feedback",
                            "technical",
                            "academic"
                        ],
                        "example": "academic"
                    },
                    "is_active": {
                        "description": "Whether the forum is currently active",
                        "type": "boolean",
                        "example": true
                    },
                    "is_moderated": {
                        "description": "Whether posts require moderation before appearing",
                        "type": "boolean",
                        "example": true
                    },
                    "post_count": {
                        "description": "Total number of posts in the forum",
                        "type": "integer",
                        "example": 47
                    },
                    "participant_count": {
                        "description": "Number of unique users who have participated",
                        "type": "integer",
                        "example": 23
                    },
                    "last_activity_at": {
                        "description": "Timestamp of the last post or activity",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-06T14:20:00Z",
                        "nullable": true
                    },
                    "event": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Event"
                            }
                        ],
                        "nullable": true,
                        "description": "Associated event (when included)"
                    },
                    "creator": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/User"
                            }
                        ],
                        "nullable": true,
                        "description": "User who created the forum"
                    },
                    "latest_post": {
                        "description": "Most recent post in the forum",
                        "properties": {
                            "uuid": {
                                "type": "string",
                                "format": "uuid"
                            },
                            "content": {
                                "type": "string"
                            },
                            "user": {
                                "$ref": "#/components/schemas/User"
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Forum creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-07-20T09:00:00Z"
                    },
                    "updated_at": {
                        "description": "Last forum update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-06T14:20:00Z"
                    }
                },
                "type": "object"
            },
            "ForumPost": {
                "title": "Forum Post",
                "description": "Represents a post or reply in a discussion forum",
                "required": [
                    "uuid",
                    "content",
                    "is_pinned",
                    "is_solution",
                    "likes_count",
                    "replies_count",
                    "user",
                    "created_at"
                ],
                "properties": {
                    "uuid": {
                        "description": "Unique identifier for the post",
                        "type": "string",
                        "format": "uuid",
                        "example": "990i2700-e29b-41d4-a716-446655440004"
                    },
                    "content": {
                        "description": "Post content",
                        "type": "string",
                        "maxLength": 10000,
                        "minLength": 1,
                        "example": "I'm particularly interested in the ethical implications of using AI in peer review processes. Has anyone encountered studies on this topic?"
                    },
                    "is_pinned": {
                        "description": "Whether the post is pinned to the top of the forum",
                        "type": "boolean",
                        "example": false
                    },
                    "is_solution": {
                        "description": "Whether the post is marked as a solution (for Q&A forums)",
                        "type": "boolean",
                        "example": false
                    },
                    "likes_count": {
                        "description": "Number of likes received",
                        "type": "integer",
                        "example": 12
                    },
                    "replies_count": {
                        "description": "Number of direct replies",
                        "type": "integer",
                        "example": 5
                    },
                    "user_has_liked": {
                        "description": "Whether the current user has liked this post",
                        "type": "boolean",
                        "example": false
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "forum": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DiscussionForum"
                            }
                        ],
                        "nullable": true,
                        "description": "Associated forum (when included)"
                    },
                    "parent_post": {
                        "description": "Parent post if this is a reply",
                        "properties": {
                            "uuid": {
                                "type": "string",
                                "format": "uuid"
                            },
                            "content": {
                                "type": "string"
                            },
                            "user": {
                                "$ref": "#/components/schemas/User"
                            }
                        },
                        "type": "object",
                        "nullable": true
                    },
                    "replies": {
                        "description": "Direct replies to this post (when included)",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ForumPost"
                        }
                    },
                    "edited_at": {
                        "description": "When the post was last edited",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-02T16:45:00Z",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Post creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-01T14:30:00Z"
                    },
                    "updated_at": {
                        "description": "Last post update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-02T16:45:00Z"
                    }
                },
                "type": "object"
            },
            "AdminLog": {
                "title": "Administrative Log Entry",
                "description": "Represents an administrative action log entry for audit purposes",
                "required": [
                    "uuid",
                    "action",
                    "target_type",
                    "description",
                    "ip_address",
                    "severity",
                    "admin",
                    "created_at"
                ],
                "properties": {
                    "uuid": {
                        "description": "Unique identifier for the log entry",
                        "type": "string",
                        "format": "uuid",
                        "example": "bb0k4900-e29b-41d4-a716-446655440006"
                    },
                    "action": {
                        "description": "Type of administrative action performed",
                        "type": "string",
                        "enum": [
                            "user_ban",
                            "user_unban",
                            "user_promote",
                            "user_demote",
                            "event_ban",
                            "event_unban",
                            "event_delete",
                            "post_delete",
                            "admin_create"
                        ],
                        "example": "event_ban"
                    },
                    "target_type": {
                        "description": "Type of entity the action was performed on",
                        "type": "string",
                        "enum": [
                            "user",
                            "event",
                            "post",
                            "resource",
                            "forum"
                        ],
                        "example": "event"
                    },
                    "target_uuid": {
                        "description": "UUID of the target entity",
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655440000",
                        "nullable": true
                    },
                    "description": {
                        "description": "Human-readable description of the action",
                        "type": "string",
                        "example": "Banned event 'Inappropriate Conference' for violating community guidelines"
                    },
                    "changes": {
                        "description": "JSON object containing the changes made",
                        "properties": {
                            "old_status": {
                                "type": "string",
                                "example": "published"
                            },
                            "new_status": {
                                "type": "string",
                                "example": "banned"
                            },
                            "reason": {
                                "type": "string",
                                "example": "Inappropriate content"
                            }
                        },
                        "type": "object",
                        "nullable": true
                    },
                    "metadata": {
                        "description": "Additional metadata about the action",
                        "type": "object",
                        "nullable": true
                    },
                    "ip_address": {
                        "description": "IP address of the admin who performed the action",
                        "type": "string",
                        "format": "ipv4",
                        "example": "192.168.1.100"
                    },
                    "severity": {
                        "description": "Severity level of the action",
                        "type": "string",
                        "enum": [
                            "low",
                            "medium",
                            "high",
                            "critical"
                        ],
                        "example": "high"
                    },
                    "admin": {
                        "$ref": "#/components/schemas/User"
                    },
                    "created_at": {
                        "description": "When the action was performed",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-06T10:15:00Z"
                    },
                    "updated_at": {
                        "description": "Last update to the log entry",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-06T10:15:00Z"
                    }
                },
                "type": "object"
            },
            "PlatformHealth": {
                "title": "Platform Health Status",
                "description": "Overall platform health and status information for administrators",
                "required": [
                    "status",
                    "database",
                    "cache",
                    "queue",
                    "storage",
                    "event_metrics",
                    "user_metrics",
                    "timestamp"
                ],
                "properties": {
                    "status": {
                        "description": "Overall platform status",
                        "type": "string",
                        "enum": [
                            "healthy",
                            "degraded",
                            "unhealthy"
                        ],
                        "example": "healthy"
                    },
                    "database": {
                        "description": "Database connection status",
                        "properties": {
                            "status": {
                                "type": "string",
                                "enum": [
                                    "connected",
                                    "disconnected"
                                ],
                                "example": "connected"
                            },
                            "response_time_ms": {
                                "type": "integer",
                                "example": 12
                            }
                        },
                        "type": "object"
                    },
                    "cache": {
                        "description": "Cache system status",
                        "properties": {
                            "status": {
                                "type": "string",
                                "enum": [
                                    "connected",
                                    "disconnected"
                                ],
                                "example": "connected"
                            },
                            "response_time_ms": {
                                "type": "integer",
                                "example": 3
                            }
                        },
                        "type": "object"
                    },
                    "queue": {
                        "description": "Queue system status",
                        "properties": {
                            "pending_jobs": {
                                "type": "integer",
                                "example": 12
                            },
                            "failed_jobs": {
                                "type": "integer",
                                "example": 0
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "operational",
                                    "backlogged",
                                    "failing"
                                ],
                                "example": "operational"
                            }
                        },
                        "type": "object"
                    },
                    "storage": {
                        "description": "Storage system status",
                        "properties": {
                            "disk_usage_percentage": {
                                "type": "number",
                                "format": "float",
                                "example": 45.7
                            },
                            "available_space_gb": {
                                "type": "number",
                                "format": "float",
                                "example": 123.4
                            }
                        },
                        "type": "object"
                    },
                    "event_metrics": {
                        "description": "Event-related metrics",
                        "properties": {
                            "total_events": {
                                "type": "integer",
                                "example": 1247
                            },
                            "active_events": {
                                "type": "integer",
                                "example": 45
                            },
                            "upcoming_events": {
                                "type": "integer",
                                "example": 78
                            }
                        },
                        "type": "object"
                    },
                    "user_metrics": {
                        "description": "User-related metrics",
                        "properties": {
                            "total_users": {
                                "type": "integer",
                                "example": 5432
                            },
                            "active_users_24h": {
                                "type": "integer",
                                "example": 234
                            },
                            "banned_users": {
                                "type": "integer",
                                "example": 12
                            },
                            "pending_users": {
                                "type": "integer",
                                "example": 8
                            }
                        },
                        "type": "object"
                    },
                    "timestamp": {
                        "description": "When the health check was performed",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-06T15:30:00Z"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "description": "Laravel Sanctum token authentication via Bearer token. Include the token in the Authorization header: `Bearer {your-token}`",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            },
            "cookieAuth": {
                "type": "apiKey",
                "description": "Laravel Sanctum cookie-based authentication. This cookie is automatically set upon successful login and should be included in subsequent requests. Requires CSRF token for state-changing operations.",
                "name": "academia_world_token",
                "in": "cookie"
            }
        }
    },
    "tags": [
        {
            "name": "Admin",
            "description": "Administrative operations for platform management"
        },
        {
            "name": "Analytics",
            "description": "Platform analytics and metrics for administrators"
        },
        {
            "name": "Authentication",
            "description": "User authentication and account management"
        },
        {
            "name": "Events",
            "description": "Event management operations"
        },
        {
            "name": "Forums",
            "description": "Discussion forum management operations"
        },
        {
            "name": "Resources",
            "description": "Event resource management operations"
        },
        {
            "name": "User Profile",
            "description": "User profile management endpoints"
        },
        {
            "name": "Forum Posts",
            "description": "Forum Posts"
        },
        {
            "name": "User Connections",
            "description": "User Connections"
        }
    ]
}